{"type":"File","start":0,"end":7935,"loc":{"start":{"line":1,"column":0},"end":{"line":232,"column":0}},"program":{"type":"Program","start":0,"end":7935,"loc":{"start":{"line":1,"column":0},"end":{"line":232,"column":0}},"sourceType":"module","body":[{"type":"VariableDeclaration","start":1785,"end":1906,"loc":{"start":{"line":42,"column":0},"end":{"line":46,"column":2}},"declarations":[{"type":"VariableDeclarator","start":1791,"end":1905,"loc":{"start":{"line":42,"column":6},"end":{"line":46,"column":1}},"id":{"type":"Identifier","start":1791,"end":1795,"loc":{"start":{"line":42,"column":6},"end":{"line":42,"column":10},"identifierName":"bind"},"name":"bind","leadingComments":null},"init":{"type":"FunctionExpression","start":1798,"end":1905,"loc":{"start":{"line":42,"column":13},"end":{"line":46,"column":1}},"id":{"type":"Identifier","start":1791,"end":1795,"loc":{"start":{"line":42,"column":6},"end":{"line":42,"column":10},"identifierName":"bind"},"name":"bind","leadingComments":null},"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":1807,"end":1809,"loc":{"start":{"line":42,"column":22},"end":{"line":42,"column":24},"identifierName":"fn"},"name":"fn"}],"body":{"type":"BlockStatement","start":1810,"end":1905,"loc":{"start":{"line":42,"column":25},"end":{"line":46,"column":1}},"body":[{"type":"ReturnStatement","start":1816,"end":1903,"loc":{"start":{"line":43,"column":4},"end":{"line":45,"column":6}},"argument":{"type":"FunctionExpression","start":1823,"end":1902,"loc":{"start":{"line":43,"column":11},"end":{"line":45,"column":5}},"id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":1832,"end":1836,"loc":{"start":{"line":43,"column":20},"end":{"line":43,"column":24},"identifierName":"name"},"name":"name"},{"type":"AssignmentPattern","start":1838,"end":1848,"loc":{"start":{"line":43,"column":26},"end":{"line":43,"column":36}},"left":{"type":"Identifier","start":1838,"end":1841,"loc":{"start":{"line":43,"column":26},"end":{"line":43,"column":29},"identifierName":"src"},"name":"src"},"right":{"type":"Identifier","start":1844,"end":1848,"loc":{"start":{"line":43,"column":32},"end":{"line":43,"column":36},"identifierName":"name"},"name":"name"}}],"body":{"type":"BlockStatement","start":1849,"end":1902,"loc":{"start":{"line":43,"column":37},"end":{"line":45,"column":5}},"body":[{"type":"ExpressionStatement","start":1859,"end":1896,"loc":{"start":{"line":44,"column":8},"end":{"line":44,"column":45}},"expression":{"type":"AssignmentExpression","start":1859,"end":1895,"loc":{"start":{"line":44,"column":8},"end":{"line":44,"column":44}},"operator":"=","left":{"type":"MemberExpression","start":1859,"end":1874,"loc":{"start":{"line":44,"column":8},"end":{"line":44,"column":23}},"object":{"type":"MemberExpression","start":1859,"end":1868,"loc":{"start":{"line":44,"column":8},"end":{"line":44,"column":17}},"object":{"type":"ThisExpression","start":1859,"end":1863,"loc":{"start":{"line":44,"column":8},"end":{"line":44,"column":12}}},"property":{"type":"Identifier","start":1864,"end":1868,"loc":{"start":{"line":44,"column":13},"end":{"line":44,"column":17},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":1869,"end":1873,"loc":{"start":{"line":44,"column":18},"end":{"line":44,"column":22},"identifierName":"name"},"name":"name"},"computed":true},"right":{"type":"CallExpression","start":1877,"end":1895,"loc":{"start":{"line":44,"column":26},"end":{"line":44,"column":44}},"callee":{"type":"Identifier","start":1877,"end":1879,"loc":{"start":{"line":44,"column":26},"end":{"line":44,"column":28},"identifierName":"fn"},"name":"fn"},"arguments":[{"type":"MemberExpression","start":1880,"end":1894,"loc":{"start":{"line":44,"column":29},"end":{"line":44,"column":43}},"object":{"type":"MemberExpression","start":1880,"end":1889,"loc":{"start":{"line":44,"column":29},"end":{"line":44,"column":38}},"object":{"type":"ThisExpression","start":1880,"end":1884,"loc":{"start":{"line":44,"column":29},"end":{"line":44,"column":33}}},"property":{"type":"Identifier","start":1885,"end":1889,"loc":{"start":{"line":44,"column":34},"end":{"line":44,"column":38},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":1890,"end":1893,"loc":{"start":{"line":44,"column":39},"end":{"line":44,"column":42},"identifierName":"src"},"name":"src"},"computed":true}]}}}],"directives":[]}}}],"directives":[]}},"leadingComments":null}],"kind":"const","leadingComments":[{"type":"CommentBlock","value":"*\n * These functions provide basic mapping-abilities for Corrode's VariableStack\n * {@link Corrode#vars}\n *\n * Imagine them like this:\n * ```\n * const parser = new Corrode();\n * parser.uint8('value').map.double('value');\n * ```\n *\n * Of course there's no real mapping-function which doubles a value.\n * But the concept is that they are functions receiving a value, processing it\n * and saving a new value in the {@link VariableStack} in place of the old one.\n *\n * The imaginary code above would yield `{ value: 4 }`, parsing a buffer like this `[2]`.\n *\n * There are two ways to create a mapper. Either by using the {bind} helper-function\n * which simply receives a value and returns one, or by defining the function yourself.\n *\n * The bind-utility only allows for simple functions with no additional parameters.\n * Our double-mapper would be a perfect example: `export const double = bind(val => val * 2)`.\n * These should be pure functions.\n *\n * The other way - defining your own mapper-function accepts deals with the {@link VariableStack}\n * at {@link Corrode#vars} by itself. This means: reads and writes from {@link Corrode#vars}. Because of that\n * they are inherently impure. A next step should be to move all mappers to pure functions.\n * (see Issue #28)\n *\n * Note that all mappers don't check for existance, validity or other assumptions.\n * You have to do that yourself with assertions.\n ","start":0,"end":1407,"loc":{"start":{"line":1,"column":0},"end":{"line":31,"column":3}}},{"type":"CommentBlock","value":"*\n * helper function to bind a mapper\n * mappers created with this utility accept two parameters:\n * name and src, with the src defaulting to name.\n * This way, we get a mapper which per-default takes the target as the source\n * but also accepts a different source.\n * @param {function(val: *)} fn map-function\n * @return {function}         function ready to use in tap\n ","start":1409,"end":1784,"loc":{"start":{"line":33,"column":0},"end":{"line":41,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n * replace a variable in the stack by a mapped version of itself\n * @param {string}           name identifier of the variable to map\n * @param {function(val: *)} fn   map-function\n * @example\n * parser.uint8('value').map.callback('value', val => (val - 1) * 2)\n *\n * // [21] => { value: 10 }\n ","start":1908,"end":2207,"loc":{"start":{"line":48,"column":0},"end":{"line":56,"column":3}}}]},{"type":"ExportNamedDeclaration","start":2208,"end":2288,"loc":{"start":{"line":57,"column":0},"end":{"line":59,"column":1}},"specifiers":[],"source":null,"declaration":{"type":"FunctionDeclaration","start":2215,"end":2288,"loc":{"start":{"line":57,"column":7},"end":{"line":59,"column":1}},"id":{"type":"Identifier","start":2224,"end":2232,"loc":{"start":{"line":57,"column":16},"end":{"line":57,"column":24},"identifierName":"callback"},"name":"callback","leadingComments":null},"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":2233,"end":2237,"loc":{"start":{"line":57,"column":25},"end":{"line":57,"column":29},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":2239,"end":2241,"loc":{"start":{"line":57,"column":31},"end":{"line":57,"column":33},"identifierName":"fn"},"name":"fn"}],"body":{"type":"BlockStatement","start":2242,"end":2288,"loc":{"start":{"line":57,"column":34},"end":{"line":59,"column":1}},"body":[{"type":"ExpressionStatement","start":2248,"end":2286,"loc":{"start":{"line":58,"column":4},"end":{"line":58,"column":42}},"expression":{"type":"AssignmentExpression","start":2248,"end":2285,"loc":{"start":{"line":58,"column":4},"end":{"line":58,"column":41}},"operator":"=","left":{"type":"MemberExpression","start":2248,"end":2263,"loc":{"start":{"line":58,"column":4},"end":{"line":58,"column":19}},"object":{"type":"MemberExpression","start":2248,"end":2257,"loc":{"start":{"line":58,"column":4},"end":{"line":58,"column":13}},"object":{"type":"ThisExpression","start":2248,"end":2252,"loc":{"start":{"line":58,"column":4},"end":{"line":58,"column":8}}},"property":{"type":"Identifier","start":2253,"end":2257,"loc":{"start":{"line":58,"column":9},"end":{"line":58,"column":13},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":2258,"end":2262,"loc":{"start":{"line":58,"column":14},"end":{"line":58,"column":18},"identifierName":"name"},"name":"name"},"computed":true},"right":{"type":"CallExpression","start":2266,"end":2285,"loc":{"start":{"line":58,"column":22},"end":{"line":58,"column":41}},"callee":{"type":"Identifier","start":2266,"end":2268,"loc":{"start":{"line":58,"column":22},"end":{"line":58,"column":24},"identifierName":"fn"},"name":"fn"},"arguments":[{"type":"MemberExpression","start":2269,"end":2284,"loc":{"start":{"line":58,"column":25},"end":{"line":58,"column":40}},"object":{"type":"MemberExpression","start":2269,"end":2278,"loc":{"start":{"line":58,"column":25},"end":{"line":58,"column":34}},"object":{"type":"ThisExpression","start":2269,"end":2273,"loc":{"start":{"line":58,"column":25},"end":{"line":58,"column":29}}},"property":{"type":"Identifier","start":2274,"end":2278,"loc":{"start":{"line":58,"column":30},"end":{"line":58,"column":34},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":2279,"end":2283,"loc":{"start":{"line":58,"column":35},"end":{"line":58,"column":39},"identifierName":"name"},"name":"name"},"computed":true}]}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"*\n * replace a variable in the stack by a mapped version of itself\n * @param {string}           name identifier of the variable to map\n * @param {function(val: *)} fn   map-function\n * @example\n * parser.uint8('value').map.callback('value', val => (val - 1) * 2)\n *\n * // [21] => { value: 10 }\n ","start":1908,"end":2207,"loc":{"start":{"line":48,"column":0},"end":{"line":56,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n * retrieve a value from an accessable type (like array[0] or object['foo'])\n * @param {string} name                    identifier of the variable to map\n * @param {array|object|string} accessable accessable variable\n * @param {string} [src=name]              identifier of the variable in {@link Corrode#vars} by which to access `accessable`\n * @example <caption>get from array</caption>\n * parser.uint8('accessor').map.get('accessor', ['A', 'B', 'C', 'D'])\n *\n * // [2] => { accessor: 'C' }\n *\n * @example <caption>get from object</caption>\n * parser.terminatedString('accessor').map.get('accessor', { foo: 'A', bar: 'B', qux: 'C' })\n *\n * // ['q', 'u', 'x', 0x00] => { accessor: 'C' }\n ","start":2290,"end":2985,"loc":{"start":{"line":61,"column":0},"end":{"line":75,"column":3}}}]},"leadingComments":[{"$ref":"$[\"program\"][\"body\"][1][\"declaration\"][\"leadingComments\"][0]"}],"trailingComments":[{"$ref":"$[\"program\"][\"body\"][1][\"declaration\"][\"trailingComments\"][0]"}]},{"type":"ExportNamedDeclaration","start":2986,"end":3088,"loc":{"start":{"line":76,"column":0},"end":{"line":78,"column":1}},"specifiers":[],"source":null,"declaration":{"type":"FunctionDeclaration","start":2993,"end":3088,"loc":{"start":{"line":76,"column":7},"end":{"line":78,"column":1}},"id":{"type":"Identifier","start":3002,"end":3005,"loc":{"start":{"line":76,"column":16},"end":{"line":76,"column":19},"identifierName":"get"},"name":"get","leadingComments":null},"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":3006,"end":3010,"loc":{"start":{"line":76,"column":20},"end":{"line":76,"column":24},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":3012,"end":3022,"loc":{"start":{"line":76,"column":26},"end":{"line":76,"column":36},"identifierName":"accessable"},"name":"accessable"},{"type":"AssignmentPattern","start":3024,"end":3034,"loc":{"start":{"line":76,"column":38},"end":{"line":76,"column":48}},"left":{"type":"Identifier","start":3024,"end":3027,"loc":{"start":{"line":76,"column":38},"end":{"line":76,"column":41},"identifierName":"src"},"name":"src"},"right":{"type":"Identifier","start":3030,"end":3034,"loc":{"start":{"line":76,"column":44},"end":{"line":76,"column":48},"identifierName":"name"},"name":"name"}}],"body":{"type":"BlockStatement","start":3035,"end":3088,"loc":{"start":{"line":76,"column":49},"end":{"line":78,"column":1}},"body":[{"type":"ExpressionStatement","start":3041,"end":3086,"loc":{"start":{"line":77,"column":4},"end":{"line":77,"column":49}},"expression":{"type":"AssignmentExpression","start":3041,"end":3085,"loc":{"start":{"line":77,"column":4},"end":{"line":77,"column":48}},"operator":"=","left":{"type":"MemberExpression","start":3041,"end":3056,"loc":{"start":{"line":77,"column":4},"end":{"line":77,"column":19}},"object":{"type":"MemberExpression","start":3041,"end":3050,"loc":{"start":{"line":77,"column":4},"end":{"line":77,"column":13}},"object":{"type":"ThisExpression","start":3041,"end":3045,"loc":{"start":{"line":77,"column":4},"end":{"line":77,"column":8}}},"property":{"type":"Identifier","start":3046,"end":3050,"loc":{"start":{"line":77,"column":9},"end":{"line":77,"column":13},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":3051,"end":3055,"loc":{"start":{"line":77,"column":14},"end":{"line":77,"column":18},"identifierName":"name"},"name":"name"},"computed":true},"right":{"type":"MemberExpression","start":3059,"end":3085,"loc":{"start":{"line":77,"column":22},"end":{"line":77,"column":48}},"object":{"type":"Identifier","start":3059,"end":3069,"loc":{"start":{"line":77,"column":22},"end":{"line":77,"column":32},"identifierName":"accessable"},"name":"accessable"},"property":{"type":"MemberExpression","start":3070,"end":3084,"loc":{"start":{"line":77,"column":33},"end":{"line":77,"column":47}},"object":{"type":"MemberExpression","start":3070,"end":3079,"loc":{"start":{"line":77,"column":33},"end":{"line":77,"column":42}},"object":{"type":"ThisExpression","start":3070,"end":3074,"loc":{"start":{"line":77,"column":33},"end":{"line":77,"column":37}}},"property":{"type":"Identifier","start":3075,"end":3079,"loc":{"start":{"line":77,"column":38},"end":{"line":77,"column":42},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":3080,"end":3083,"loc":{"start":{"line":77,"column":43},"end":{"line":77,"column":46},"identifierName":"src"},"name":"src"},"computed":true},"computed":true}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"*\n * retrieve a value from an accessable type (like array[0] or object['foo'])\n * @param {string} name                    identifier of the variable to map\n * @param {array|object|string} accessable accessable variable\n * @param {string} [src=name]              identifier of the variable in {@link Corrode#vars} by which to access `accessable`\n * @example <caption>get from array</caption>\n * parser.uint8('accessor').map.get('accessor', ['A', 'B', 'C', 'D'])\n *\n * // [2] => { accessor: 'C' }\n *\n * @example <caption>get from object</caption>\n * parser.terminatedString('accessor').map.get('accessor', { foo: 'A', bar: 'B', qux: 'C' })\n *\n * // ['q', 'u', 'x', 0x00] => { accessor: 'C' }\n ","start":2290,"end":2985,"loc":{"start":{"line":61,"column":0},"end":{"line":75,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n * retrieve a filtered array of objects from an array of objects, matching a specified attribute against a specified value\n * @param {string} name         identifier of the variable, to write to {@link Corrode#vars}\n * @param {Array<Object>} array array, containing the objects to filter\n * @param {string} attr         identifier of the attribute from an object of `array` to compare against\n * @param {string} [src=name]   {@link Corrode#vars}-identifier to read from\n * @throws {Error} when no object can be found\n * @example\n * parser.uint8('matchAgainst').map.findAll('matchAgainst', [\n *   { children: 1, name: 'foo' },\n *   { children: 2, name: 'bar' },\n *   { children: 2, name: 'qux' }\n * ], 'children')\n *\n * // [2] => { matchAgainst: [\n * //   { children: 2, name: 'bar' },\n * //   { children: 2, name: 'qux' }\n * // ]}\n *\n * // [1] => { matchAgainst: [\n * //   { children: 1, name: 'foo' }\n * // ]}\n ","start":3090,"end":4008,"loc":{"start":{"line":80,"column":0},"end":{"line":102,"column":3}}}]},"leadingComments":[{"$ref":"$[\"program\"][\"body\"][2][\"declaration\"][\"leadingComments\"][0]"}],"trailingComments":[{"$ref":"$[\"program\"][\"body\"][2][\"declaration\"][\"trailingComments\"][0]"}]},{"type":"ExportNamedDeclaration","start":4009,"end":4308,"loc":{"start":{"line":103,"column":0},"end":{"line":109,"column":1}},"specifiers":[],"source":null,"declaration":{"type":"FunctionDeclaration","start":4016,"end":4308,"loc":{"start":{"line":103,"column":7},"end":{"line":109,"column":1}},"id":{"type":"Identifier","start":4025,"end":4032,"loc":{"start":{"line":103,"column":16},"end":{"line":103,"column":23},"identifierName":"findAll"},"name":"findAll","leadingComments":null},"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":4033,"end":4037,"loc":{"start":{"line":103,"column":24},"end":{"line":103,"column":28},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":4039,"end":4044,"loc":{"start":{"line":103,"column":30},"end":{"line":103,"column":35},"identifierName":"array"},"name":"array"},{"type":"Identifier","start":4046,"end":4050,"loc":{"start":{"line":103,"column":37},"end":{"line":103,"column":41},"identifierName":"attr"},"name":"attr"},{"type":"AssignmentPattern","start":4052,"end":4062,"loc":{"start":{"line":103,"column":43},"end":{"line":103,"column":53}},"left":{"type":"Identifier","start":4052,"end":4055,"loc":{"start":{"line":103,"column":43},"end":{"line":103,"column":46},"identifierName":"src"},"name":"src"},"right":{"type":"Identifier","start":4058,"end":4062,"loc":{"start":{"line":103,"column":49},"end":{"line":103,"column":53},"identifierName":"name"},"name":"name"}}],"body":{"type":"BlockStatement","start":4063,"end":4308,"loc":{"start":{"line":103,"column":54},"end":{"line":109,"column":1}},"body":[{"type":"VariableDeclaration","start":4069,"end":4138,"loc":{"start":{"line":104,"column":4},"end":{"line":104,"column":73}},"declarations":[{"type":"VariableDeclarator","start":4075,"end":4137,"loc":{"start":{"line":104,"column":10},"end":{"line":104,"column":72}},"id":{"type":"Identifier","start":4075,"end":4083,"loc":{"start":{"line":104,"column":10},"end":{"line":104,"column":18},"identifierName":"filtered"},"name":"filtered"},"init":{"type":"CallExpression","start":4086,"end":4137,"loc":{"start":{"line":104,"column":21},"end":{"line":104,"column":72}},"callee":{"type":"MemberExpression","start":4086,"end":4098,"loc":{"start":{"line":104,"column":21},"end":{"line":104,"column":33}},"object":{"type":"Identifier","start":4086,"end":4091,"loc":{"start":{"line":104,"column":21},"end":{"line":104,"column":26},"identifierName":"array"},"name":"array"},"property":{"type":"Identifier","start":4092,"end":4098,"loc":{"start":{"line":104,"column":27},"end":{"line":104,"column":33},"identifierName":"filter"},"name":"filter"},"computed":false},"arguments":[{"type":"ArrowFunctionExpression","start":4099,"end":4136,"loc":{"start":{"line":104,"column":34},"end":{"line":104,"column":71}},"id":null,"generator":false,"expression":true,"async":false,"params":[{"type":"Identifier","start":4099,"end":4103,"loc":{"start":{"line":104,"column":34},"end":{"line":104,"column":38},"identifierName":"item"},"name":"item"}],"body":{"type":"BinaryExpression","start":4107,"end":4136,"loc":{"start":{"line":104,"column":42},"end":{"line":104,"column":71}},"left":{"type":"MemberExpression","start":4107,"end":4117,"loc":{"start":{"line":104,"column":42},"end":{"line":104,"column":52}},"object":{"type":"Identifier","start":4107,"end":4111,"loc":{"start":{"line":104,"column":42},"end":{"line":104,"column":46},"identifierName":"item"},"name":"item"},"property":{"type":"Identifier","start":4112,"end":4116,"loc":{"start":{"line":104,"column":47},"end":{"line":104,"column":51},"identifierName":"attr"},"name":"attr"},"computed":true},"operator":"===","right":{"type":"MemberExpression","start":4122,"end":4136,"loc":{"start":{"line":104,"column":57},"end":{"line":104,"column":71}},"object":{"type":"MemberExpression","start":4122,"end":4131,"loc":{"start":{"line":104,"column":57},"end":{"line":104,"column":66}},"object":{"type":"ThisExpression","start":4122,"end":4126,"loc":{"start":{"line":104,"column":57},"end":{"line":104,"column":61}}},"property":{"type":"Identifier","start":4127,"end":4131,"loc":{"start":{"line":104,"column":62},"end":{"line":104,"column":66},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":4132,"end":4135,"loc":{"start":{"line":104,"column":67},"end":{"line":104,"column":70},"identifierName":"src"},"name":"src"},"computed":true}}}]}}],"kind":"const"},{"type":"IfStatement","start":4143,"end":4274,"loc":{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},"test":{"type":"BinaryExpression","start":4146,"end":4167,"loc":{"start":{"line":105,"column":7},"end":{"line":105,"column":28}},"left":{"type":"MemberExpression","start":4146,"end":4161,"loc":{"start":{"line":105,"column":7},"end":{"line":105,"column":22}},"object":{"type":"Identifier","start":4146,"end":4154,"loc":{"start":{"line":105,"column":7},"end":{"line":105,"column":15},"identifierName":"filtered"},"name":"filtered"},"property":{"type":"Identifier","start":4155,"end":4161,"loc":{"start":{"line":105,"column":16},"end":{"line":105,"column":22},"identifierName":"length"},"name":"length"},"computed":false},"operator":"===","right":{"type":"NumericLiteral","start":4166,"end":4167,"loc":{"start":{"line":105,"column":27},"end":{"line":105,"column":28}},"extra":{"rawValue":0,"raw":"0"},"value":0}},"consequent":{"type":"BlockStatement","start":4168,"end":4274,"loc":{"start":{"line":105,"column":29},"end":{"line":107,"column":5}},"body":[{"type":"ThrowStatement","start":4178,"end":4268,"loc":{"start":{"line":106,"column":8},"end":{"line":106,"column":98}},"argument":{"type":"NewExpression","start":4184,"end":4267,"loc":{"start":{"line":106,"column":14},"end":{"line":106,"column":97}},"callee":{"type":"Identifier","start":4188,"end":4193,"loc":{"start":{"line":106,"column":18},"end":{"line":106,"column":23},"identifierName":"Error"},"name":"Error"},"arguments":[{"type":"TemplateLiteral","start":4194,"end":4266,"loc":{"start":{"line":106,"column":24},"end":{"line":106,"column":96}},"expressions":[{"type":"Identifier","start":4230,"end":4234,"loc":{"start":{"line":106,"column":60},"end":{"line":106,"column":64},"identifierName":"attr"},"name":"attr"},{"type":"Identifier","start":4242,"end":4245,"loc":{"start":{"line":106,"column":72},"end":{"line":106,"column":75},"identifierName":"src"},"name":"src"},{"type":"MemberExpression","start":4249,"end":4263,"loc":{"start":{"line":106,"column":79},"end":{"line":106,"column":93}},"object":{"type":"MemberExpression","start":4249,"end":4258,"loc":{"start":{"line":106,"column":79},"end":{"line":106,"column":88}},"object":{"type":"ThisExpression","start":4249,"end":4253,"loc":{"start":{"line":106,"column":79},"end":{"line":106,"column":83}}},"property":{"type":"Identifier","start":4254,"end":4258,"loc":{"start":{"line":106,"column":84},"end":{"line":106,"column":88},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":4259,"end":4262,"loc":{"start":{"line":106,"column":89},"end":{"line":106,"column":92},"identifierName":"src"},"name":"src"},"computed":true}],"quasis":[{"type":"TemplateElement","start":4195,"end":4228,"loc":{"start":{"line":106,"column":25},"end":{"line":106,"column":58}},"value":{"raw":"cannot find object in array with ","cooked":"cannot find object in array with "},"tail":false},{"type":"TemplateElement","start":4235,"end":4240,"loc":{"start":{"line":106,"column":65},"end":{"line":106,"column":70}},"value":{"raw":" === ","cooked":" === "},"tail":false},{"type":"TemplateElement","start":4246,"end":4247,"loc":{"start":{"line":106,"column":76},"end":{"line":106,"column":77}},"value":{"raw":"(","cooked":"("},"tail":false},{"type":"TemplateElement","start":4264,"end":4265,"loc":{"start":{"line":106,"column":94},"end":{"line":106,"column":95}},"value":{"raw":")","cooked":")"},"tail":true}]}]}}],"directives":[]},"alternate":null},{"type":"ExpressionStatement","start":4279,"end":4306,"loc":{"start":{"line":108,"column":4},"end":{"line":108,"column":31}},"expression":{"type":"AssignmentExpression","start":4279,"end":4305,"loc":{"start":{"line":108,"column":4},"end":{"line":108,"column":30}},"operator":"=","left":{"type":"MemberExpression","start":4279,"end":4294,"loc":{"start":{"line":108,"column":4},"end":{"line":108,"column":19}},"object":{"type":"MemberExpression","start":4279,"end":4288,"loc":{"start":{"line":108,"column":4},"end":{"line":108,"column":13}},"object":{"type":"ThisExpression","start":4279,"end":4283,"loc":{"start":{"line":108,"column":4},"end":{"line":108,"column":8}}},"property":{"type":"Identifier","start":4284,"end":4288,"loc":{"start":{"line":108,"column":9},"end":{"line":108,"column":13},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":4289,"end":4293,"loc":{"start":{"line":108,"column":14},"end":{"line":108,"column":18},"identifierName":"name"},"name":"name"},"computed":true},"right":{"type":"Identifier","start":4297,"end":4305,"loc":{"start":{"line":108,"column":22},"end":{"line":108,"column":30},"identifierName":"filtered"},"name":"filtered"}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"*\n * retrieve a filtered array of objects from an array of objects, matching a specified attribute against a specified value\n * @param {string} name         identifier of the variable, to write to {@link Corrode#vars}\n * @param {Array<Object>} array array, containing the objects to filter\n * @param {string} attr         identifier of the attribute from an object of `array` to compare against\n * @param {string} [src=name]   {@link Corrode#vars}-identifier to read from\n * @throws {Error} when no object can be found\n * @example\n * parser.uint8('matchAgainst').map.findAll('matchAgainst', [\n *   { children: 1, name: 'foo' },\n *   { children: 2, name: 'bar' },\n *   { children: 2, name: 'qux' }\n * ], 'children')\n *\n * // [2] => { matchAgainst: [\n * //   { children: 2, name: 'bar' },\n * //   { children: 2, name: 'qux' }\n * // ]}\n *\n * // [1] => { matchAgainst: [\n * //   { children: 1, name: 'foo' }\n * // ]}\n ","start":3090,"end":4008,"loc":{"start":{"line":80,"column":0},"end":{"line":102,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n * retrieve the first object from an array of objects, matching a specified attribute against a specified value\n * like {@link findAll}, but returning only the first element\n * @param {string} name         identifier of the variable, to write to {@link Corrode#vars}\n * @param {Array<Object>} array array, containing the objects to filter\n * @param {string} attr         identifier of the attribute from an object of `array` to compare against\n * @param {string} [src=name]   {@link Corrode#vars}-identifier to read from\n * @throws {Error} when no object can be found\n * @example\n * parser.uint8('matchAgainst').map.find('matchAgainst', [\n *   { id: 1, name: 'foo' },\n *   { id: 7, name: 'bar' },\n *   { id: 4, name: 'qux' }\n * ], 'id')\n *\n * // [4] => { matchAgainst: { id: 4, name: 'qux' } }\n *\n * // [2] => Error cannot find object!\n ","start":4310,"end":5153,"loc":{"start":{"line":111,"column":0},"end":{"line":129,"column":3}}}]},"leadingComments":[{"$ref":"$[\"program\"][\"body\"][3][\"declaration\"][\"leadingComments\"][0]"}],"trailingComments":[{"$ref":"$[\"program\"][\"body\"][3][\"declaration\"][\"trailingComments\"][0]"}]},{"type":"ExportNamedDeclaration","start":5154,"end":5298,"loc":{"start":{"line":130,"column":0},"end":{"line":133,"column":1}},"specifiers":[],"source":null,"declaration":{"type":"FunctionDeclaration","start":5161,"end":5298,"loc":{"start":{"line":130,"column":7},"end":{"line":133,"column":1}},"id":{"type":"Identifier","start":5170,"end":5174,"loc":{"start":{"line":130,"column":16},"end":{"line":130,"column":20},"identifierName":"find"},"name":"find","leadingComments":null},"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":5175,"end":5179,"loc":{"start":{"line":130,"column":21},"end":{"line":130,"column":25},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":5181,"end":5186,"loc":{"start":{"line":130,"column":27},"end":{"line":130,"column":32},"identifierName":"array"},"name":"array"},{"type":"Identifier","start":5188,"end":5192,"loc":{"start":{"line":130,"column":34},"end":{"line":130,"column":38},"identifierName":"attr"},"name":"attr"},{"type":"AssignmentPattern","start":5194,"end":5204,"loc":{"start":{"line":130,"column":40},"end":{"line":130,"column":50}},"left":{"type":"Identifier","start":5194,"end":5197,"loc":{"start":{"line":130,"column":40},"end":{"line":130,"column":43},"identifierName":"src"},"name":"src"},"right":{"type":"Identifier","start":5200,"end":5204,"loc":{"start":{"line":130,"column":46},"end":{"line":130,"column":50},"identifierName":"name"},"name":"name"}}],"body":{"type":"BlockStatement","start":5205,"end":5298,"loc":{"start":{"line":130,"column":51},"end":{"line":133,"column":1}},"body":[{"type":"ExpressionStatement","start":5211,"end":5254,"loc":{"start":{"line":131,"column":4},"end":{"line":131,"column":47}},"expression":{"type":"CallExpression","start":5211,"end":5253,"loc":{"start":{"line":131,"column":4},"end":{"line":131,"column":46}},"callee":{"type":"MemberExpression","start":5211,"end":5223,"loc":{"start":{"line":131,"column":4},"end":{"line":131,"column":16}},"object":{"type":"Identifier","start":5211,"end":5218,"loc":{"start":{"line":131,"column":4},"end":{"line":131,"column":11},"identifierName":"findAll"},"name":"findAll"},"property":{"type":"Identifier","start":5219,"end":5223,"loc":{"start":{"line":131,"column":12},"end":{"line":131,"column":16},"identifierName":"call"},"name":"call"},"computed":false},"arguments":[{"type":"ThisExpression","start":5224,"end":5228,"loc":{"start":{"line":131,"column":17},"end":{"line":131,"column":21}}},{"type":"Identifier","start":5230,"end":5234,"loc":{"start":{"line":131,"column":23},"end":{"line":131,"column":27},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":5236,"end":5241,"loc":{"start":{"line":131,"column":29},"end":{"line":131,"column":34},"identifierName":"array"},"name":"array"},{"type":"Identifier","start":5243,"end":5247,"loc":{"start":{"line":131,"column":36},"end":{"line":131,"column":40},"identifierName":"attr"},"name":"attr"},{"type":"Identifier","start":5249,"end":5252,"loc":{"start":{"line":131,"column":42},"end":{"line":131,"column":45},"identifierName":"src"},"name":"src"}]}},{"type":"ExpressionStatement","start":5259,"end":5296,"loc":{"start":{"line":132,"column":4},"end":{"line":132,"column":41}},"expression":{"type":"AssignmentExpression","start":5259,"end":5295,"loc":{"start":{"line":132,"column":4},"end":{"line":132,"column":40}},"operator":"=","left":{"type":"MemberExpression","start":5259,"end":5274,"loc":{"start":{"line":132,"column":4},"end":{"line":132,"column":19}},"object":{"type":"MemberExpression","start":5259,"end":5268,"loc":{"start":{"line":132,"column":4},"end":{"line":132,"column":13}},"object":{"type":"ThisExpression","start":5259,"end":5263,"loc":{"start":{"line":132,"column":4},"end":{"line":132,"column":8}}},"property":{"type":"Identifier","start":5264,"end":5268,"loc":{"start":{"line":132,"column":9},"end":{"line":132,"column":13},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":5269,"end":5273,"loc":{"start":{"line":132,"column":14},"end":{"line":132,"column":18},"identifierName":"name"},"name":"name"},"computed":true},"right":{"type":"MemberExpression","start":5277,"end":5295,"loc":{"start":{"line":132,"column":22},"end":{"line":132,"column":40}},"object":{"type":"MemberExpression","start":5277,"end":5292,"loc":{"start":{"line":132,"column":22},"end":{"line":132,"column":37}},"object":{"type":"MemberExpression","start":5277,"end":5286,"loc":{"start":{"line":132,"column":22},"end":{"line":132,"column":31}},"object":{"type":"ThisExpression","start":5277,"end":5281,"loc":{"start":{"line":132,"column":22},"end":{"line":132,"column":26}}},"property":{"type":"Identifier","start":5282,"end":5286,"loc":{"start":{"line":132,"column":27},"end":{"line":132,"column":31},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":5287,"end":5291,"loc":{"start":{"line":132,"column":32},"end":{"line":132,"column":36},"identifierName":"name"},"name":"name"},"computed":true},"property":{"type":"NumericLiteral","start":5293,"end":5294,"loc":{"start":{"line":132,"column":38},"end":{"line":132,"column":39}},"extra":{"rawValue":0,"raw":"0"},"value":0},"computed":true}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"*\n * retrieve the first object from an array of objects, matching a specified attribute against a specified value\n * like {@link findAll}, but returning only the first element\n * @param {string} name         identifier of the variable, to write to {@link Corrode#vars}\n * @param {Array<Object>} array array, containing the objects to filter\n * @param {string} attr         identifier of the attribute from an object of `array` to compare against\n * @param {string} [src=name]   {@link Corrode#vars}-identifier to read from\n * @throws {Error} when no object can be found\n * @example\n * parser.uint8('matchAgainst').map.find('matchAgainst', [\n *   { id: 1, name: 'foo' },\n *   { id: 7, name: 'bar' },\n *   { id: 4, name: 'qux' }\n * ], 'id')\n *\n * // [4] => { matchAgainst: { id: 4, name: 'qux' } }\n *\n * // [2] => Error cannot find object!\n ","start":4310,"end":5153,"loc":{"start":{"line":111,"column":0},"end":{"line":129,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n * replace {@link Corrode#vars} completely with a value from {@link Corrode#vars}\n * especially useful when pushing a variable further up in the stack\n *\n * @example <caption>push loop-variables up</caption>\n * parser.loop('array', function(){\n *     this\n *         .uint8('value')\n *         .map.double()\n *         .map.push('value');\n * });\n *\n * // [1, 2, 3, 4] => { array: [2, 4, 6, 8] }\n *\n * @example <caption>push values in an extension</caption>\n * Corrode.addExtension('doStuff', function(){\n *     this\n *         .uint32('address')\n *         .tap(function(){\n *             this.vars.address = `0x${this.vars.address.toString(16)}`;\n *         })\n *         .map.push('address');\n * });\n *\n * parser.ext.doStuff('hexAddress');\n *\n * // [245] => { hexAddress: '0xf5' }\n *\n * @param {string} [name='values'] identifier of the variable being used as replacement\n ","start":5300,"end":6181,"loc":{"start":{"line":135,"column":0},"end":{"line":164,"column":3}}}]},"leadingComments":[{"$ref":"$[\"program\"][\"body\"][4][\"declaration\"][\"leadingComments\"][0]"}],"trailingComments":[{"$ref":"$[\"program\"][\"body\"][4][\"declaration\"][\"trailingComments\"][0]"}]},{"type":"ExportNamedDeclaration","start":6182,"end":6255,"loc":{"start":{"line":165,"column":0},"end":{"line":167,"column":1}},"specifiers":[],"source":null,"declaration":{"type":"FunctionDeclaration","start":6189,"end":6255,"loc":{"start":{"line":165,"column":7},"end":{"line":167,"column":1}},"id":{"type":"Identifier","start":6198,"end":6202,"loc":{"start":{"line":165,"column":16},"end":{"line":165,"column":20},"identifierName":"push"},"name":"push","leadingComments":null},"generator":false,"expression":false,"async":false,"params":[{"type":"AssignmentPattern","start":6203,"end":6218,"loc":{"start":{"line":165,"column":21},"end":{"line":165,"column":36}},"left":{"type":"Identifier","start":6203,"end":6207,"loc":{"start":{"line":165,"column":21},"end":{"line":165,"column":25},"identifierName":"name"},"name":"name"},"right":{"type":"StringLiteral","start":6210,"end":6218,"loc":{"start":{"line":165,"column":28},"end":{"line":165,"column":36}},"extra":{"rawValue":"values","raw":"'values'"},"value":"values"}}],"body":{"type":"BlockStatement","start":6219,"end":6255,"loc":{"start":{"line":165,"column":37},"end":{"line":167,"column":1}},"body":[{"type":"ExpressionStatement","start":6225,"end":6253,"loc":{"start":{"line":166,"column":4},"end":{"line":166,"column":32}},"expression":{"type":"AssignmentExpression","start":6225,"end":6252,"loc":{"start":{"line":166,"column":4},"end":{"line":166,"column":31}},"operator":"=","left":{"type":"MemberExpression","start":6225,"end":6234,"loc":{"start":{"line":166,"column":4},"end":{"line":166,"column":13}},"object":{"type":"ThisExpression","start":6225,"end":6229,"loc":{"start":{"line":166,"column":4},"end":{"line":166,"column":8}}},"property":{"type":"Identifier","start":6230,"end":6234,"loc":{"start":{"line":166,"column":9},"end":{"line":166,"column":13},"identifierName":"vars"},"name":"vars"},"computed":false},"right":{"type":"MemberExpression","start":6237,"end":6252,"loc":{"start":{"line":166,"column":16},"end":{"line":166,"column":31}},"object":{"type":"MemberExpression","start":6237,"end":6246,"loc":{"start":{"line":166,"column":16},"end":{"line":166,"column":25}},"object":{"type":"ThisExpression","start":6237,"end":6241,"loc":{"start":{"line":166,"column":16},"end":{"line":166,"column":20}}},"property":{"type":"Identifier","start":6242,"end":6246,"loc":{"start":{"line":166,"column":21},"end":{"line":166,"column":25},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":6247,"end":6251,"loc":{"start":{"line":166,"column":26},"end":{"line":166,"column":30},"identifierName":"name"},"name":"name"},"computed":true}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"*\n * replace {@link Corrode#vars} completely with a value from {@link Corrode#vars}\n * especially useful when pushing a variable further up in the stack\n *\n * @example <caption>push loop-variables up</caption>\n * parser.loop('array', function(){\n *     this\n *         .uint8('value')\n *         .map.double()\n *         .map.push('value');\n * });\n *\n * // [1, 2, 3, 4] => { array: [2, 4, 6, 8] }\n *\n * @example <caption>push values in an extension</caption>\n * Corrode.addExtension('doStuff', function(){\n *     this\n *         .uint32('address')\n *         .tap(function(){\n *             this.vars.address = `0x${this.vars.address.toString(16)}`;\n *         })\n *         .map.push('address');\n * });\n *\n * parser.ext.doStuff('hexAddress');\n *\n * // [245] => { hexAddress: '0xf5' }\n *\n * @param {string} [name='values'] identifier of the variable being used as replacement\n ","start":5300,"end":6181,"loc":{"start":{"line":135,"column":0},"end":{"line":164,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n * map a value by checking whether it has some bits set\n * @param {string} name    identifier of the variable, to write to {@link Corrode#vars}\n * @param  {Object|number} maskObject Object or number by which to check the bits of the variable to map\n * @example <caption>map via number</caption>\n * parser.uint8('bits').map.bitmask('bits', 0x80)\n *\n * // [0b10111110] => { bits: true }\n *\n * @example <caption>map via object</caption>\n * parser.uint8('bits').map.bitmask('bits', {\n *   isCompressed: 0x80,\n *   isReadOnly: 0x40\n * })\n *\n * // [0b10111110] => { bits: { isCompressed: true, isReadOnly: false } }\n ","start":6257,"end":6874,"loc":{"start":{"line":169,"column":0},"end":{"line":185,"column":3}}}]},"leadingComments":[{"$ref":"$[\"program\"][\"body\"][5][\"declaration\"][\"leadingComments\"][0]"}],"trailingComments":[{"$ref":"$[\"program\"][\"body\"][5][\"declaration\"][\"trailingComments\"][0]"}]},{"type":"ExportNamedDeclaration","start":6875,"end":7309,"loc":{"start":{"line":186,"column":0},"end":{"line":200,"column":1}},"specifiers":[],"source":null,"declaration":{"type":"FunctionDeclaration","start":6882,"end":7309,"loc":{"start":{"line":186,"column":7},"end":{"line":200,"column":1}},"id":{"type":"Identifier","start":6891,"end":6898,"loc":{"start":{"line":186,"column":16},"end":{"line":186,"column":23},"identifierName":"bitmask"},"name":"bitmask","leadingComments":null},"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":6899,"end":6903,"loc":{"start":{"line":186,"column":24},"end":{"line":186,"column":28},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":6905,"end":6915,"loc":{"start":{"line":186,"column":30},"end":{"line":186,"column":40},"identifierName":"maskObject"},"name":"maskObject"}],"body":{"type":"BlockStatement","start":6916,"end":7309,"loc":{"start":{"line":186,"column":41},"end":{"line":200,"column":1}},"body":[{"type":"VariableDeclaration","start":6922,"end":6951,"loc":{"start":{"line":187,"column":4},"end":{"line":187,"column":33}},"declarations":[{"type":"VariableDeclarator","start":6928,"end":6950,"loc":{"start":{"line":187,"column":10},"end":{"line":187,"column":32}},"id":{"type":"Identifier","start":6928,"end":6932,"loc":{"start":{"line":187,"column":10},"end":{"line":187,"column":14},"identifierName":"bits"},"name":"bits"},"init":{"type":"MemberExpression","start":6935,"end":6950,"loc":{"start":{"line":187,"column":17},"end":{"line":187,"column":32}},"object":{"type":"MemberExpression","start":6935,"end":6944,"loc":{"start":{"line":187,"column":17},"end":{"line":187,"column":26}},"object":{"type":"ThisExpression","start":6935,"end":6939,"loc":{"start":{"line":187,"column":17},"end":{"line":187,"column":21}}},"property":{"type":"Identifier","start":6940,"end":6944,"loc":{"start":{"line":187,"column":22},"end":{"line":187,"column":26},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":6945,"end":6949,"loc":{"start":{"line":187,"column":27},"end":{"line":187,"column":31},"identifierName":"name"},"name":"name"},"computed":true}}],"kind":"const","trailingComments":[{"type":"CommentLine","value":" shortcut for single values","start":6957,"end":6986,"loc":{"start":{"line":189,"column":4},"end":{"line":189,"column":33}}}]},{"type":"IfStatement","start":6991,"end":7101,"loc":{"start":{"line":190,"column":4},"end":{"line":192,"column":5}},"test":{"type":"BinaryExpression","start":6994,"end":7024,"loc":{"start":{"line":190,"column":7},"end":{"line":190,"column":37}},"left":{"type":"UnaryExpression","start":6994,"end":7011,"loc":{"start":{"line":190,"column":7},"end":{"line":190,"column":24}},"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":7001,"end":7011,"loc":{"start":{"line":190,"column":14},"end":{"line":190,"column":24},"identifierName":"maskObject"},"name":"maskObject","leadingComments":null},"extra":{"parenthesizedArgument":false},"leadingComments":null},"operator":"===","right":{"type":"StringLiteral","start":7016,"end":7024,"loc":{"start":{"line":190,"column":29},"end":{"line":190,"column":37}},"extra":{"rawValue":"number","raw":"'number'"},"value":"number"},"leadingComments":null},"consequent":{"type":"BlockStatement","start":7025,"end":7101,"loc":{"start":{"line":190,"column":38},"end":{"line":192,"column":5}},"body":[{"type":"ReturnStatement","start":7035,"end":7095,"loc":{"start":{"line":191,"column":8},"end":{"line":191,"column":68}},"argument":{"type":"AssignmentExpression","start":7042,"end":7094,"loc":{"start":{"line":191,"column":15},"end":{"line":191,"column":67}},"operator":"=","left":{"type":"MemberExpression","start":7042,"end":7057,"loc":{"start":{"line":191,"column":15},"end":{"line":191,"column":30}},"object":{"type":"MemberExpression","start":7042,"end":7051,"loc":{"start":{"line":191,"column":15},"end":{"line":191,"column":24}},"object":{"type":"ThisExpression","start":7042,"end":7046,"loc":{"start":{"line":191,"column":15},"end":{"line":191,"column":19}}},"property":{"type":"Identifier","start":7047,"end":7051,"loc":{"start":{"line":191,"column":20},"end":{"line":191,"column":24},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":7052,"end":7056,"loc":{"start":{"line":191,"column":25},"end":{"line":191,"column":29},"identifierName":"name"},"name":"name"},"computed":true},"right":{"type":"BinaryExpression","start":7060,"end":7094,"loc":{"start":{"line":191,"column":33},"end":{"line":191,"column":67}},"left":{"type":"BinaryExpression","start":7061,"end":7078,"loc":{"start":{"line":191,"column":34},"end":{"line":191,"column":51}},"left":{"type":"Identifier","start":7061,"end":7065,"loc":{"start":{"line":191,"column":34},"end":{"line":191,"column":38},"identifierName":"bits"},"name":"bits"},"operator":"&","right":{"type":"Identifier","start":7068,"end":7078,"loc":{"start":{"line":191,"column":41},"end":{"line":191,"column":51},"identifierName":"maskObject"},"name":"maskObject"},"extra":{"parenthesized":true,"parenStart":7060}},"operator":"===","right":{"type":"Identifier","start":7084,"end":7094,"loc":{"start":{"line":191,"column":57},"end":{"line":191,"column":67},"identifierName":"maskObject"},"name":"maskObject"}}}}],"directives":[]},"alternate":null,"leadingComments":[{"type":"CommentLine","value":" shortcut for single values","start":6957,"end":6986,"loc":{"start":{"line":189,"column":4},"end":{"line":189,"column":33}}}]},{"type":"VariableDeclaration","start":7107,"end":7125,"loc":{"start":{"line":194,"column":4},"end":{"line":194,"column":22}},"declarations":[{"type":"VariableDeclarator","start":7113,"end":7124,"loc":{"start":{"line":194,"column":10},"end":{"line":194,"column":21}},"id":{"type":"Identifier","start":7113,"end":7119,"loc":{"start":{"line":194,"column":10},"end":{"line":194,"column":16},"identifierName":"values"},"name":"values"},"init":{"type":"ObjectExpression","start":7122,"end":7124,"loc":{"start":{"line":194,"column":19},"end":{"line":194,"column":21}},"properties":[]}}],"kind":"const"},{"type":"ExpressionStatement","start":7130,"end":7277,"loc":{"start":{"line":195,"column":4},"end":{"line":198,"column":7}},"expression":{"type":"CallExpression","start":7130,"end":7276,"loc":{"start":{"line":195,"column":4},"end":{"line":198,"column":6}},"callee":{"type":"MemberExpression","start":7130,"end":7161,"loc":{"start":{"line":195,"column":4},"end":{"line":195,"column":35}},"object":{"type":"CallExpression","start":7130,"end":7153,"loc":{"start":{"line":195,"column":4},"end":{"line":195,"column":27}},"callee":{"type":"MemberExpression","start":7130,"end":7141,"loc":{"start":{"line":195,"column":4},"end":{"line":195,"column":15}},"object":{"type":"Identifier","start":7130,"end":7136,"loc":{"start":{"line":195,"column":4},"end":{"line":195,"column":10},"identifierName":"Object"},"name":"Object"},"property":{"type":"Identifier","start":7137,"end":7141,"loc":{"start":{"line":195,"column":11},"end":{"line":195,"column":15},"identifierName":"keys"},"name":"keys"},"computed":false},"arguments":[{"type":"Identifier","start":7142,"end":7152,"loc":{"start":{"line":195,"column":16},"end":{"line":195,"column":26},"identifierName":"maskObject"},"name":"maskObject"}]},"property":{"type":"Identifier","start":7154,"end":7161,"loc":{"start":{"line":195,"column":28},"end":{"line":195,"column":35},"identifierName":"forEach"},"name":"forEach"},"computed":false},"arguments":[{"type":"ArrowFunctionExpression","start":7162,"end":7275,"loc":{"start":{"line":195,"column":36},"end":{"line":198,"column":5}},"id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":7162,"end":7170,"loc":{"start":{"line":195,"column":36},"end":{"line":195,"column":44},"identifierName":"maskName"},"name":"maskName"}],"body":{"type":"BlockStatement","start":7174,"end":7275,"loc":{"start":{"line":195,"column":48},"end":{"line":198,"column":5}},"body":[{"type":"VariableDeclaration","start":7184,"end":7218,"loc":{"start":{"line":196,"column":8},"end":{"line":196,"column":42}},"declarations":[{"type":"VariableDeclarator","start":7190,"end":7217,"loc":{"start":{"line":196,"column":14},"end":{"line":196,"column":41}},"id":{"type":"Identifier","start":7190,"end":7194,"loc":{"start":{"line":196,"column":14},"end":{"line":196,"column":18},"identifierName":"mask"},"name":"mask"},"init":{"type":"MemberExpression","start":7197,"end":7217,"loc":{"start":{"line":196,"column":21},"end":{"line":196,"column":41}},"object":{"type":"Identifier","start":7197,"end":7207,"loc":{"start":{"line":196,"column":21},"end":{"line":196,"column":31},"identifierName":"maskObject"},"name":"maskObject"},"property":{"type":"Identifier","start":7208,"end":7216,"loc":{"start":{"line":196,"column":32},"end":{"line":196,"column":40},"identifierName":"maskName"},"name":"maskName"},"computed":true}}],"kind":"const"},{"type":"ExpressionStatement","start":7227,"end":7269,"loc":{"start":{"line":197,"column":8},"end":{"line":197,"column":50}},"expression":{"type":"AssignmentExpression","start":7227,"end":7268,"loc":{"start":{"line":197,"column":8},"end":{"line":197,"column":49}},"operator":"=","left":{"type":"MemberExpression","start":7227,"end":7243,"loc":{"start":{"line":197,"column":8},"end":{"line":197,"column":24}},"object":{"type":"Identifier","start":7227,"end":7233,"loc":{"start":{"line":197,"column":8},"end":{"line":197,"column":14},"identifierName":"values"},"name":"values"},"property":{"type":"Identifier","start":7234,"end":7242,"loc":{"start":{"line":197,"column":15},"end":{"line":197,"column":23},"identifierName":"maskName"},"name":"maskName"},"computed":true},"right":{"type":"BinaryExpression","start":7246,"end":7268,"loc":{"start":{"line":197,"column":27},"end":{"line":197,"column":49}},"left":{"type":"BinaryExpression","start":7247,"end":7258,"loc":{"start":{"line":197,"column":28},"end":{"line":197,"column":39}},"left":{"type":"Identifier","start":7247,"end":7251,"loc":{"start":{"line":197,"column":28},"end":{"line":197,"column":32},"identifierName":"bits"},"name":"bits"},"operator":"&","right":{"type":"Identifier","start":7254,"end":7258,"loc":{"start":{"line":197,"column":35},"end":{"line":197,"column":39},"identifierName":"mask"},"name":"mask"},"extra":{"parenthesized":true,"parenStart":7246}},"operator":"===","right":{"type":"Identifier","start":7264,"end":7268,"loc":{"start":{"line":197,"column":45},"end":{"line":197,"column":49},"identifierName":"mask"},"name":"mask"}}}}],"directives":[]}}]}},{"type":"ExpressionStatement","start":7282,"end":7307,"loc":{"start":{"line":199,"column":4},"end":{"line":199,"column":29}},"expression":{"type":"AssignmentExpression","start":7282,"end":7306,"loc":{"start":{"line":199,"column":4},"end":{"line":199,"column":28}},"operator":"=","left":{"type":"MemberExpression","start":7282,"end":7297,"loc":{"start":{"line":199,"column":4},"end":{"line":199,"column":19}},"object":{"type":"MemberExpression","start":7282,"end":7291,"loc":{"start":{"line":199,"column":4},"end":{"line":199,"column":13}},"object":{"type":"ThisExpression","start":7282,"end":7286,"loc":{"start":{"line":199,"column":4},"end":{"line":199,"column":8}}},"property":{"type":"Identifier","start":7287,"end":7291,"loc":{"start":{"line":199,"column":9},"end":{"line":199,"column":13},"identifierName":"vars"},"name":"vars"},"computed":false},"property":{"type":"Identifier","start":7292,"end":7296,"loc":{"start":{"line":199,"column":14},"end":{"line":199,"column":18},"identifierName":"name"},"name":"name"},"computed":true},"right":{"type":"Identifier","start":7300,"end":7306,"loc":{"start":{"line":199,"column":22},"end":{"line":199,"column":28},"identifierName":"values"},"name":"values"}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"*\n * map a value by checking whether it has some bits set\n * @param {string} name    identifier of the variable, to write to {@link Corrode#vars}\n * @param  {Object|number} maskObject Object or number by which to check the bits of the variable to map\n * @example <caption>map via number</caption>\n * parser.uint8('bits').map.bitmask('bits', 0x80)\n *\n * // [0b10111110] => { bits: true }\n *\n * @example <caption>map via object</caption>\n * parser.uint8('bits').map.bitmask('bits', {\n *   isCompressed: 0x80,\n *   isReadOnly: 0x40\n * })\n *\n * // [0b10111110] => { bits: { isCompressed: true, isReadOnly: false } }\n ","start":6257,"end":6874,"loc":{"start":{"line":169,"column":0},"end":{"line":185,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n * retrieve absolute value of a number\n * {@link Math.abs}\n * @type {function}\n * @example\n * this.int8('value').map.abs('value')\n *\n * // [-14] => { value: 14 }\n ","start":7311,"end":7480,"loc":{"start":{"line":202,"column":0},"end":{"line":210,"column":3}}}]},"leadingComments":[{"$ref":"$[\"program\"][\"body\"][6][\"declaration\"][\"leadingComments\"][0]"}],"trailingComments":[{"$ref":"$[\"program\"][\"body\"][6][\"declaration\"][\"trailingComments\"][0]"}]},{"type":"ExportNamedDeclaration","start":7481,"end":7515,"loc":{"start":{"line":211,"column":0},"end":{"line":211,"column":34}},"specifiers":[],"source":null,"declaration":{"type":"VariableDeclaration","start":7488,"end":7515,"loc":{"start":{"line":211,"column":7},"end":{"line":211,"column":34}},"declarations":[{"type":"VariableDeclarator","start":7494,"end":7514,"loc":{"start":{"line":211,"column":13},"end":{"line":211,"column":33}},"id":{"type":"Identifier","start":7494,"end":7497,"loc":{"start":{"line":211,"column":13},"end":{"line":211,"column":16},"identifierName":"abs"},"name":"abs","leadingComments":null},"init":{"type":"CallExpression","start":7500,"end":7514,"loc":{"start":{"line":211,"column":19},"end":{"line":211,"column":33}},"callee":{"type":"Identifier","start":7500,"end":7504,"loc":{"start":{"line":211,"column":19},"end":{"line":211,"column":23},"identifierName":"bind"},"name":"bind"},"arguments":[{"type":"MemberExpression","start":7505,"end":7513,"loc":{"start":{"line":211,"column":24},"end":{"line":211,"column":32}},"object":{"type":"Identifier","start":7505,"end":7509,"loc":{"start":{"line":211,"column":24},"end":{"line":211,"column":28},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":7510,"end":7513,"loc":{"start":{"line":211,"column":29},"end":{"line":211,"column":32},"identifierName":"abs"},"name":"abs"},"computed":false}]},"leadingComments":null}],"kind":"const","leadingComments":[{"type":"CommentBlock","value":"*\n * retrieve absolute value of a number\n * {@link Math.abs}\n * @type {function}\n * @example\n * this.int8('value').map.abs('value')\n *\n * // [-14] => { value: 14 }\n ","start":7311,"end":7480,"loc":{"start":{"line":202,"column":0},"end":{"line":210,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n * retrieve inverted number\n * @type {function}\n * @example\n * this.uint8('value').map.abs('value')\n *\n * // [27] => { value: -27 }\n ","start":7517,"end":7656,"loc":{"start":{"line":213,"column":0},"end":{"line":220,"column":3}}}]},"leadingComments":[{"$ref":"$[\"program\"][\"body\"][7][\"declaration\"][\"leadingComments\"][0]"}],"trailingComments":[{"$ref":"$[\"program\"][\"body\"][7][\"declaration\"][\"trailingComments\"][0]"}]},{"type":"ExportNamedDeclaration","start":7657,"end":7701,"loc":{"start":{"line":221,"column":0},"end":{"line":221,"column":44}},"specifiers":[],"source":null,"declaration":{"type":"VariableDeclaration","start":7664,"end":7701,"loc":{"start":{"line":221,"column":7},"end":{"line":221,"column":44}},"declarations":[{"type":"VariableDeclarator","start":7670,"end":7700,"loc":{"start":{"line":221,"column":13},"end":{"line":221,"column":43}},"id":{"type":"Identifier","start":7670,"end":7676,"loc":{"start":{"line":221,"column":13},"end":{"line":221,"column":19},"identifierName":"invert"},"name":"invert","leadingComments":null},"init":{"type":"CallExpression","start":7679,"end":7700,"loc":{"start":{"line":221,"column":22},"end":{"line":221,"column":43}},"callee":{"type":"Identifier","start":7679,"end":7683,"loc":{"start":{"line":221,"column":22},"end":{"line":221,"column":26},"identifierName":"bind"},"name":"bind"},"arguments":[{"type":"ArrowFunctionExpression","start":7684,"end":7699,"loc":{"start":{"line":221,"column":27},"end":{"line":221,"column":42}},"id":null,"generator":false,"expression":true,"async":false,"params":[{"type":"Identifier","start":7684,"end":7687,"loc":{"start":{"line":221,"column":27},"end":{"line":221,"column":30},"identifierName":"val"},"name":"val"}],"body":{"type":"BinaryExpression","start":7691,"end":7699,"loc":{"start":{"line":221,"column":34},"end":{"line":221,"column":42}},"left":{"type":"Identifier","start":7691,"end":7694,"loc":{"start":{"line":221,"column":34},"end":{"line":221,"column":37},"identifierName":"val"},"name":"val"},"operator":"*","right":{"type":"UnaryExpression","start":7697,"end":7699,"loc":{"start":{"line":221,"column":40},"end":{"line":221,"column":42}},"operator":"-","prefix":true,"argument":{"type":"NumericLiteral","start":7698,"end":7699,"loc":{"start":{"line":221,"column":41},"end":{"line":221,"column":42}},"extra":{"rawValue":1,"raw":"1"},"value":1},"extra":{"parenthesizedArgument":false}}}}]},"leadingComments":null}],"kind":"const","leadingComments":[{"type":"CommentBlock","value":"*\n * retrieve inverted number\n * @type {function}\n * @example\n * this.uint8('value').map.abs('value')\n *\n * // [27] => { value: -27 }\n ","start":7517,"end":7656,"loc":{"start":{"line":213,"column":0},"end":{"line":220,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n * retrieve trimmed string\n * @type {function}\n * @example\n * this.terminatedString('value').map.trim('value')\n *\n * // [' ', '\\t', 'f', 'o', 'b', 'r', '\\n'] => { value: 'fobr' }\n ","start":7703,"end":7889,"loc":{"start":{"line":223,"column":0},"end":{"line":230,"column":3}}}]},"leadingComments":[{"$ref":"$[\"program\"][\"body\"][8][\"declaration\"][\"leadingComments\"][0]"}],"trailingComments":[{"$ref":"$[\"program\"][\"body\"][8][\"declaration\"][\"trailingComments\"][0]"}]},{"type":"ExportNamedDeclaration","start":7890,"end":7934,"loc":{"start":{"line":231,"column":0},"end":{"line":231,"column":44}},"specifiers":[],"source":null,"declaration":{"type":"VariableDeclaration","start":7897,"end":7934,"loc":{"start":{"line":231,"column":7},"end":{"line":231,"column":44}},"declarations":[{"type":"VariableDeclarator","start":7903,"end":7933,"loc":{"start":{"line":231,"column":13},"end":{"line":231,"column":43}},"id":{"type":"Identifier","start":7903,"end":7907,"loc":{"start":{"line":231,"column":13},"end":{"line":231,"column":17},"identifierName":"trim"},"name":"trim","leadingComments":null},"init":{"type":"CallExpression","start":7910,"end":7933,"loc":{"start":{"line":231,"column":20},"end":{"line":231,"column":43}},"callee":{"type":"Identifier","start":7910,"end":7914,"loc":{"start":{"line":231,"column":20},"end":{"line":231,"column":24},"identifierName":"bind"},"name":"bind"},"arguments":[{"type":"ArrowFunctionExpression","start":7915,"end":7932,"loc":{"start":{"line":231,"column":25},"end":{"line":231,"column":42}},"id":null,"generator":false,"expression":true,"async":false,"params":[{"type":"Identifier","start":7915,"end":7918,"loc":{"start":{"line":231,"column":25},"end":{"line":231,"column":28},"identifierName":"str"},"name":"str"}],"body":{"type":"CallExpression","start":7922,"end":7932,"loc":{"start":{"line":231,"column":32},"end":{"line":231,"column":42}},"callee":{"type":"MemberExpression","start":7922,"end":7930,"loc":{"start":{"line":231,"column":32},"end":{"line":231,"column":40}},"object":{"type":"Identifier","start":7922,"end":7925,"loc":{"start":{"line":231,"column":32},"end":{"line":231,"column":35},"identifierName":"str"},"name":"str"},"property":{"type":"Identifier","start":7926,"end":7930,"loc":{"start":{"line":231,"column":36},"end":{"line":231,"column":40},"identifierName":"trim"},"name":"trim"},"computed":false},"arguments":[]}}]},"leadingComments":null}],"kind":"const","leadingComments":[{"type":"CommentBlock","value":"*\n * retrieve trimmed string\n * @type {function}\n * @example\n * this.terminatedString('value').map.trim('value')\n *\n * // [' ', '\\t', 'f', 'o', 'b', 'r', '\\n'] => { value: 'fobr' }\n ","start":7703,"end":7889,"loc":{"start":{"line":223,"column":0},"end":{"line":230,"column":3}}}],"trailingComments":[]},"leadingComments":[{"$ref":"$[\"program\"][\"body\"][9][\"declaration\"][\"leadingComments\"][0]"}]}],"directives":[]},"comments":[{"type":"CommentBlock","value":"*\n * These functions provide basic mapping-abilities for Corrode's VariableStack\n * {@link Corrode#vars}\n *\n * Imagine them like this:\n * ```\n * const parser = new Corrode();\n * parser.uint8('value').map.double('value');\n * ```\n *\n * Of course there's no real mapping-function which doubles a value.\n * But the concept is that they are functions receiving a value, processing it\n * and saving a new value in the {@link VariableStack} in place of the old one.\n *\n * The imaginary code above would yield `{ value: 4 }`, parsing a buffer like this `[2]`.\n *\n * There are two ways to create a mapper. Either by using the {bind} helper-function\n * which simply receives a value and returns one, or by defining the function yourself.\n *\n * The bind-utility only allows for simple functions with no additional parameters.\n * Our double-mapper would be a perfect example: `export const double = bind(val => val * 2)`.\n * These should be pure functions.\n *\n * The other way - defining your own mapper-function accepts deals with the {@link VariableStack}\n * at {@link Corrode#vars} by itself. This means: reads and writes from {@link Corrode#vars}. Because of that\n * they are inherently impure. A next step should be to move all mappers to pure functions.\n * (see Issue #28)\n *\n * Note that all mappers don't check for existance, validity or other assumptions.\n * You have to do that yourself with assertions.\n ","start":0,"end":1407,"loc":{"start":{"line":1,"column":0},"end":{"line":31,"column":3}}},{"type":"CommentBlock","value":"*\n * helper function to bind a mapper\n * mappers created with this utility accept two parameters:\n * name and src, with the src defaulting to name.\n * This way, we get a mapper which per-default takes the target as the source\n * but also accepts a different source.\n * @param {function(val: *)} fn map-function\n * @return {function}         function ready to use in tap\n ","start":1409,"end":1784,"loc":{"start":{"line":33,"column":0},"end":{"line":41,"column":3}}},{"type":"CommentBlock","value":"*\n * replace a variable in the stack by a mapped version of itself\n * @param {string}           name identifier of the variable to map\n * @param {function(val: *)} fn   map-function\n * @example\n * parser.uint8('value').map.callback('value', val => (val - 1) * 2)\n *\n * // [21] => { value: 10 }\n ","start":1908,"end":2207,"loc":{"start":{"line":48,"column":0},"end":{"line":56,"column":3}}},{"type":"CommentBlock","value":"*\n * retrieve a value from an accessable type (like array[0] or object['foo'])\n * @param {string} name                    identifier of the variable to map\n * @param {array|object|string} accessable accessable variable\n * @param {string} [src=name]              identifier of the variable in {@link Corrode#vars} by which to access `accessable`\n * @example <caption>get from array</caption>\n * parser.uint8('accessor').map.get('accessor', ['A', 'B', 'C', 'D'])\n *\n * // [2] => { accessor: 'C' }\n *\n * @example <caption>get from object</caption>\n * parser.terminatedString('accessor').map.get('accessor', { foo: 'A', bar: 'B', qux: 'C' })\n *\n * // ['q', 'u', 'x', 0x00] => { accessor: 'C' }\n ","start":2290,"end":2985,"loc":{"start":{"line":61,"column":0},"end":{"line":75,"column":3}}},{"type":"CommentBlock","value":"*\n * retrieve a filtered array of objects from an array of objects, matching a specified attribute against a specified value\n * @param {string} name         identifier of the variable, to write to {@link Corrode#vars}\n * @param {Array<Object>} array array, containing the objects to filter\n * @param {string} attr         identifier of the attribute from an object of `array` to compare against\n * @param {string} [src=name]   {@link Corrode#vars}-identifier to read from\n * @throws {Error} when no object can be found\n * @example\n * parser.uint8('matchAgainst').map.findAll('matchAgainst', [\n *   { children: 1, name: 'foo' },\n *   { children: 2, name: 'bar' },\n *   { children: 2, name: 'qux' }\n * ], 'children')\n *\n * // [2] => { matchAgainst: [\n * //   { children: 2, name: 'bar' },\n * //   { children: 2, name: 'qux' }\n * // ]}\n *\n * // [1] => { matchAgainst: [\n * //   { children: 1, name: 'foo' }\n * // ]}\n ","start":3090,"end":4008,"loc":{"start":{"line":80,"column":0},"end":{"line":102,"column":3}}},{"type":"CommentBlock","value":"*\n * retrieve the first object from an array of objects, matching a specified attribute against a specified value\n * like {@link findAll}, but returning only the first element\n * @param {string} name         identifier of the variable, to write to {@link Corrode#vars}\n * @param {Array<Object>} array array, containing the objects to filter\n * @param {string} attr         identifier of the attribute from an object of `array` to compare against\n * @param {string} [src=name]   {@link Corrode#vars}-identifier to read from\n * @throws {Error} when no object can be found\n * @example\n * parser.uint8('matchAgainst').map.find('matchAgainst', [\n *   { id: 1, name: 'foo' },\n *   { id: 7, name: 'bar' },\n *   { id: 4, name: 'qux' }\n * ], 'id')\n *\n * // [4] => { matchAgainst: { id: 4, name: 'qux' } }\n *\n * // [2] => Error cannot find object!\n ","start":4310,"end":5153,"loc":{"start":{"line":111,"column":0},"end":{"line":129,"column":3}}},{"type":"CommentBlock","value":"*\n * replace {@link Corrode#vars} completely with a value from {@link Corrode#vars}\n * especially useful when pushing a variable further up in the stack\n *\n * @example <caption>push loop-variables up</caption>\n * parser.loop('array', function(){\n *     this\n *         .uint8('value')\n *         .map.double()\n *         .map.push('value');\n * });\n *\n * // [1, 2, 3, 4] => { array: [2, 4, 6, 8] }\n *\n * @example <caption>push values in an extension</caption>\n * Corrode.addExtension('doStuff', function(){\n *     this\n *         .uint32('address')\n *         .tap(function(){\n *             this.vars.address = `0x${this.vars.address.toString(16)}`;\n *         })\n *         .map.push('address');\n * });\n *\n * parser.ext.doStuff('hexAddress');\n *\n * // [245] => { hexAddress: '0xf5' }\n *\n * @param {string} [name='values'] identifier of the variable being used as replacement\n ","start":5300,"end":6181,"loc":{"start":{"line":135,"column":0},"end":{"line":164,"column":3}}},{"type":"CommentBlock","value":"*\n * map a value by checking whether it has some bits set\n * @param {string} name    identifier of the variable, to write to {@link Corrode#vars}\n * @param  {Object|number} maskObject Object or number by which to check the bits of the variable to map\n * @example <caption>map via number</caption>\n * parser.uint8('bits').map.bitmask('bits', 0x80)\n *\n * // [0b10111110] => { bits: true }\n *\n * @example <caption>map via object</caption>\n * parser.uint8('bits').map.bitmask('bits', {\n *   isCompressed: 0x80,\n *   isReadOnly: 0x40\n * })\n *\n * // [0b10111110] => { bits: { isCompressed: true, isReadOnly: false } }\n ","start":6257,"end":6874,"loc":{"start":{"line":169,"column":0},"end":{"line":185,"column":3}}},{"type":"CommentLine","value":" shortcut for single values","start":6957,"end":6986,"loc":{"start":{"line":189,"column":4},"end":{"line":189,"column":33}}},{"type":"CommentBlock","value":"*\n * retrieve absolute value of a number\n * {@link Math.abs}\n * @type {function}\n * @example\n * this.int8('value').map.abs('value')\n *\n * // [-14] => { value: 14 }\n ","start":7311,"end":7480,"loc":{"start":{"line":202,"column":0},"end":{"line":210,"column":3}}},{"type":"CommentBlock","value":"*\n * retrieve inverted number\n * @type {function}\n * @example\n * this.uint8('value').map.abs('value')\n *\n * // [27] => { value: -27 }\n ","start":7517,"end":7656,"loc":{"start":{"line":213,"column":0},"end":{"line":220,"column":3}}},{"type":"CommentBlock","value":"*\n * retrieve trimmed string\n * @type {function}\n * @example\n * this.terminatedString('value').map.trim('value')\n *\n * // [' ', '\\t', 'f', 'o', 'b', 'r', '\\n'] => { value: 'fobr' }\n ","start":7703,"end":7889,"loc":{"start":{"line":223,"column":0},"end":{"line":230,"column":3}}}],"tokens":[{"type":"CommentBlock","value":"*\n * These functions provide basic mapping-abilities for Corrode's VariableStack\n * {@link Corrode#vars}\n *\n * Imagine them like this:\n * ```\n * const parser = new Corrode();\n * parser.uint8('value').map.double('value');\n * ```\n *\n * Of course there's no real mapping-function which doubles a value.\n * But the concept is that they are functions receiving a value, processing it\n * and saving a new value in the {@link VariableStack} in place of the old one.\n *\n * The imaginary code above would yield `{ value: 4 }`, parsing a buffer like this `[2]`.\n *\n * There are two ways to create a mapper. Either by using the {bind} helper-function\n * which simply receives a value and returns one, or by defining the function yourself.\n *\n * The bind-utility only allows for simple functions with no additional parameters.\n * Our double-mapper would be a perfect example: `export const double = bind(val => val * 2)`.\n * These should be pure functions.\n *\n * The other way - defining your own mapper-function accepts deals with the {@link VariableStack}\n * at {@link Corrode#vars} by itself. This means: reads and writes from {@link Corrode#vars}. Because of that\n * they are inherently impure. A next step should be to move all mappers to pure functions.\n * (see Issue #28)\n *\n * Note that all mappers don't check for existance, validity or other assumptions.\n * You have to do that yourself with assertions.\n ","start":0,"end":1407,"loc":{"start":{"line":1,"column":0},"end":{"line":31,"column":3}}},{"type":"CommentBlock","value":"*\n * helper function to bind a mapper\n * mappers created with this utility accept two parameters:\n * name and src, with the src defaulting to name.\n * This way, we get a mapper which per-default takes the target as the source\n * but also accepts a different source.\n * @param {function(val: *)} fn map-function\n * @return {function}         function ready to use in tap\n ","start":1409,"end":1784,"loc":{"start":{"line":33,"column":0},"end":{"line":41,"column":3}}},{"type":{"label":"const","keyword":"const","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"const","start":1785,"end":1790,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"bind","start":1791,"end":1795,"loc":{"start":{"line":42,"column":6},"end":{"line":42,"column":10}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":1796,"end":1797,"loc":{"start":{"line":42,"column":11},"end":{"line":42,"column":12}}},{"type":{"label":"function","keyword":"function","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"function","start":1798,"end":1806,"loc":{"start":{"line":42,"column":13},"end":{"line":42,"column":21}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1806,"end":1807,"loc":{"start":{"line":42,"column":21},"end":{"line":42,"column":22}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"fn","start":1807,"end":1809,"loc":{"start":{"line":42,"column":22},"end":{"line":42,"column":24}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1809,"end":1810,"loc":{"start":{"line":42,"column":24},"end":{"line":42,"column":25}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1810,"end":1811,"loc":{"start":{"line":42,"column":25},"end":{"line":42,"column":26}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":1816,"end":1822,"loc":{"start":{"line":43,"column":4},"end":{"line":43,"column":10}}},{"type":{"label":"function","keyword":"function","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"function","start":1823,"end":1831,"loc":{"start":{"line":43,"column":11},"end":{"line":43,"column":19}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1831,"end":1832,"loc":{"start":{"line":43,"column":19},"end":{"line":43,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":1832,"end":1836,"loc":{"start":{"line":43,"column":20},"end":{"line":43,"column":24}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1836,"end":1837,"loc":{"start":{"line":43,"column":24},"end":{"line":43,"column":25}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"src","start":1838,"end":1841,"loc":{"start":{"line":43,"column":26},"end":{"line":43,"column":29}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":1842,"end":1843,"loc":{"start":{"line":43,"column":30},"end":{"line":43,"column":31}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":1844,"end":1848,"loc":{"start":{"line":43,"column":32},"end":{"line":43,"column":36}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1848,"end":1849,"loc":{"start":{"line":43,"column":36},"end":{"line":43,"column":37}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1849,"end":1850,"loc":{"start":{"line":43,"column":37},"end":{"line":43,"column":38}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":1859,"end":1863,"loc":{"start":{"line":44,"column":8},"end":{"line":44,"column":12}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1863,"end":1864,"loc":{"start":{"line":44,"column":12},"end":{"line":44,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":1864,"end":1868,"loc":{"start":{"line":44,"column":13},"end":{"line":44,"column":17}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1868,"end":1869,"loc":{"start":{"line":44,"column":17},"end":{"line":44,"column":18}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":1869,"end":1873,"loc":{"start":{"line":44,"column":18},"end":{"line":44,"column":22}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1873,"end":1874,"loc":{"start":{"line":44,"column":22},"end":{"line":44,"column":23}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":1875,"end":1876,"loc":{"start":{"line":44,"column":24},"end":{"line":44,"column":25}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"fn","start":1877,"end":1879,"loc":{"start":{"line":44,"column":26},"end":{"line":44,"column":28}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1879,"end":1880,"loc":{"start":{"line":44,"column":28},"end":{"line":44,"column":29}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":1880,"end":1884,"loc":{"start":{"line":44,"column":29},"end":{"line":44,"column":33}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1884,"end":1885,"loc":{"start":{"line":44,"column":33},"end":{"line":44,"column":34}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":1885,"end":1889,"loc":{"start":{"line":44,"column":34},"end":{"line":44,"column":38}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1889,"end":1890,"loc":{"start":{"line":44,"column":38},"end":{"line":44,"column":39}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"src","start":1890,"end":1893,"loc":{"start":{"line":44,"column":39},"end":{"line":44,"column":42}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1893,"end":1894,"loc":{"start":{"line":44,"column":42},"end":{"line":44,"column":43}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1894,"end":1895,"loc":{"start":{"line":44,"column":43},"end":{"line":44,"column":44}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1895,"end":1896,"loc":{"start":{"line":44,"column":44},"end":{"line":44,"column":45}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1901,"end":1902,"loc":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1902,"end":1903,"loc":{"start":{"line":45,"column":5},"end":{"line":45,"column":6}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1904,"end":1905,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":1}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1905,"end":1906,"loc":{"start":{"line":46,"column":1},"end":{"line":46,"column":2}}},{"type":"CommentBlock","value":"*\n * replace a variable in the stack by a mapped version of itself\n * @param {string}           name identifier of the variable to map\n * @param {function(val: *)} fn   map-function\n * @example\n * parser.uint8('value').map.callback('value', val => (val - 1) * 2)\n *\n * // [21] => { value: 10 }\n ","start":1908,"end":2207,"loc":{"start":{"line":48,"column":0},"end":{"line":56,"column":3}}},{"type":{"label":"export","keyword":"export","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"export","start":2208,"end":2214,"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":6}}},{"type":{"label":"function","keyword":"function","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"function","start":2215,"end":2223,"loc":{"start":{"line":57,"column":7},"end":{"line":57,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"callback","start":2224,"end":2232,"loc":{"start":{"line":57,"column":16},"end":{"line":57,"column":24}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2232,"end":2233,"loc":{"start":{"line":57,"column":24},"end":{"line":57,"column":25}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":2233,"end":2237,"loc":{"start":{"line":57,"column":25},"end":{"line":57,"column":29}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2237,"end":2238,"loc":{"start":{"line":57,"column":29},"end":{"line":57,"column":30}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"fn","start":2239,"end":2241,"loc":{"start":{"line":57,"column":31},"end":{"line":57,"column":33}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2241,"end":2242,"loc":{"start":{"line":57,"column":33},"end":{"line":57,"column":34}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2242,"end":2243,"loc":{"start":{"line":57,"column":34},"end":{"line":57,"column":35}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":2248,"end":2252,"loc":{"start":{"line":58,"column":4},"end":{"line":58,"column":8}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2252,"end":2253,"loc":{"start":{"line":58,"column":8},"end":{"line":58,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":2253,"end":2257,"loc":{"start":{"line":58,"column":9},"end":{"line":58,"column":13}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2257,"end":2258,"loc":{"start":{"line":58,"column":13},"end":{"line":58,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":2258,"end":2262,"loc":{"start":{"line":58,"column":14},"end":{"line":58,"column":18}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2262,"end":2263,"loc":{"start":{"line":58,"column":18},"end":{"line":58,"column":19}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":2264,"end":2265,"loc":{"start":{"line":58,"column":20},"end":{"line":58,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"fn","start":2266,"end":2268,"loc":{"start":{"line":58,"column":22},"end":{"line":58,"column":24}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2268,"end":2269,"loc":{"start":{"line":58,"column":24},"end":{"line":58,"column":25}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":2269,"end":2273,"loc":{"start":{"line":58,"column":25},"end":{"line":58,"column":29}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2273,"end":2274,"loc":{"start":{"line":58,"column":29},"end":{"line":58,"column":30}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":2274,"end":2278,"loc":{"start":{"line":58,"column":30},"end":{"line":58,"column":34}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2278,"end":2279,"loc":{"start":{"line":58,"column":34},"end":{"line":58,"column":35}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":2279,"end":2283,"loc":{"start":{"line":58,"column":35},"end":{"line":58,"column":39}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2283,"end":2284,"loc":{"start":{"line":58,"column":39},"end":{"line":58,"column":40}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2284,"end":2285,"loc":{"start":{"line":58,"column":40},"end":{"line":58,"column":41}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2285,"end":2286,"loc":{"start":{"line":58,"column":41},"end":{"line":58,"column":42}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2287,"end":2288,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":1}}},{"type":"CommentBlock","value":"*\n * retrieve a value from an accessable type (like array[0] or object['foo'])\n * @param {string} name                    identifier of the variable to map\n * @param {array|object|string} accessable accessable variable\n * @param {string} [src=name]              identifier of the variable in {@link Corrode#vars} by which to access `accessable`\n * @example <caption>get from array</caption>\n * parser.uint8('accessor').map.get('accessor', ['A', 'B', 'C', 'D'])\n *\n * // [2] => { accessor: 'C' }\n *\n * @example <caption>get from object</caption>\n * parser.terminatedString('accessor').map.get('accessor', { foo: 'A', bar: 'B', qux: 'C' })\n *\n * // ['q', 'u', 'x', 0x00] => { accessor: 'C' }\n ","start":2290,"end":2985,"loc":{"start":{"line":61,"column":0},"end":{"line":75,"column":3}}},{"type":{"label":"export","keyword":"export","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"export","start":2986,"end":2992,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":6}}},{"type":{"label":"function","keyword":"function","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"function","start":2993,"end":3001,"loc":{"start":{"line":76,"column":7},"end":{"line":76,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"get","start":3002,"end":3005,"loc":{"start":{"line":76,"column":16},"end":{"line":76,"column":19}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3005,"end":3006,"loc":{"start":{"line":76,"column":19},"end":{"line":76,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":3006,"end":3010,"loc":{"start":{"line":76,"column":20},"end":{"line":76,"column":24}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3010,"end":3011,"loc":{"start":{"line":76,"column":24},"end":{"line":76,"column":25}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"accessable","start":3012,"end":3022,"loc":{"start":{"line":76,"column":26},"end":{"line":76,"column":36}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3022,"end":3023,"loc":{"start":{"line":76,"column":36},"end":{"line":76,"column":37}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"src","start":3024,"end":3027,"loc":{"start":{"line":76,"column":38},"end":{"line":76,"column":41}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":3028,"end":3029,"loc":{"start":{"line":76,"column":42},"end":{"line":76,"column":43}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":3030,"end":3034,"loc":{"start":{"line":76,"column":44},"end":{"line":76,"column":48}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3034,"end":3035,"loc":{"start":{"line":76,"column":48},"end":{"line":76,"column":49}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3035,"end":3036,"loc":{"start":{"line":76,"column":49},"end":{"line":76,"column":50}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3041,"end":3045,"loc":{"start":{"line":77,"column":4},"end":{"line":77,"column":8}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3045,"end":3046,"loc":{"start":{"line":77,"column":8},"end":{"line":77,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":3046,"end":3050,"loc":{"start":{"line":77,"column":9},"end":{"line":77,"column":13}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3050,"end":3051,"loc":{"start":{"line":77,"column":13},"end":{"line":77,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":3051,"end":3055,"loc":{"start":{"line":77,"column":14},"end":{"line":77,"column":18}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3055,"end":3056,"loc":{"start":{"line":77,"column":18},"end":{"line":77,"column":19}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":3057,"end":3058,"loc":{"start":{"line":77,"column":20},"end":{"line":77,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"accessable","start":3059,"end":3069,"loc":{"start":{"line":77,"column":22},"end":{"line":77,"column":32}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3069,"end":3070,"loc":{"start":{"line":77,"column":32},"end":{"line":77,"column":33}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3070,"end":3074,"loc":{"start":{"line":77,"column":33},"end":{"line":77,"column":37}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3074,"end":3075,"loc":{"start":{"line":77,"column":37},"end":{"line":77,"column":38}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":3075,"end":3079,"loc":{"start":{"line":77,"column":38},"end":{"line":77,"column":42}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3079,"end":3080,"loc":{"start":{"line":77,"column":42},"end":{"line":77,"column":43}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"src","start":3080,"end":3083,"loc":{"start":{"line":77,"column":43},"end":{"line":77,"column":46}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3083,"end":3084,"loc":{"start":{"line":77,"column":46},"end":{"line":77,"column":47}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3084,"end":3085,"loc":{"start":{"line":77,"column":47},"end":{"line":77,"column":48}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3085,"end":3086,"loc":{"start":{"line":77,"column":48},"end":{"line":77,"column":49}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3087,"end":3088,"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":1}}},{"type":"CommentBlock","value":"*\n * retrieve a filtered array of objects from an array of objects, matching a specified attribute against a specified value\n * @param {string} name         identifier of the variable, to write to {@link Corrode#vars}\n * @param {Array<Object>} array array, containing the objects to filter\n * @param {string} attr         identifier of the attribute from an object of `array` to compare against\n * @param {string} [src=name]   {@link Corrode#vars}-identifier to read from\n * @throws {Error} when no object can be found\n * @example\n * parser.uint8('matchAgainst').map.findAll('matchAgainst', [\n *   { children: 1, name: 'foo' },\n *   { children: 2, name: 'bar' },\n *   { children: 2, name: 'qux' }\n * ], 'children')\n *\n * // [2] => { matchAgainst: [\n * //   { children: 2, name: 'bar' },\n * //   { children: 2, name: 'qux' }\n * // ]}\n *\n * // [1] => { matchAgainst: [\n * //   { children: 1, name: 'foo' }\n * // ]}\n ","start":3090,"end":4008,"loc":{"start":{"line":80,"column":0},"end":{"line":102,"column":3}}},{"type":{"label":"export","keyword":"export","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"export","start":4009,"end":4015,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":6}}},{"type":{"label":"function","keyword":"function","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"function","start":4016,"end":4024,"loc":{"start":{"line":103,"column":7},"end":{"line":103,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"findAll","start":4025,"end":4032,"loc":{"start":{"line":103,"column":16},"end":{"line":103,"column":23}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4032,"end":4033,"loc":{"start":{"line":103,"column":23},"end":{"line":103,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":4033,"end":4037,"loc":{"start":{"line":103,"column":24},"end":{"line":103,"column":28}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4037,"end":4038,"loc":{"start":{"line":103,"column":28},"end":{"line":103,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"array","start":4039,"end":4044,"loc":{"start":{"line":103,"column":30},"end":{"line":103,"column":35}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4044,"end":4045,"loc":{"start":{"line":103,"column":35},"end":{"line":103,"column":36}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"attr","start":4046,"end":4050,"loc":{"start":{"line":103,"column":37},"end":{"line":103,"column":41}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4050,"end":4051,"loc":{"start":{"line":103,"column":41},"end":{"line":103,"column":42}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"src","start":4052,"end":4055,"loc":{"start":{"line":103,"column":43},"end":{"line":103,"column":46}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":4056,"end":4057,"loc":{"start":{"line":103,"column":47},"end":{"line":103,"column":48}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":4058,"end":4062,"loc":{"start":{"line":103,"column":49},"end":{"line":103,"column":53}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4062,"end":4063,"loc":{"start":{"line":103,"column":53},"end":{"line":103,"column":54}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4063,"end":4064,"loc":{"start":{"line":103,"column":54},"end":{"line":103,"column":55}}},{"type":{"label":"const","keyword":"const","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"const","start":4069,"end":4074,"loc":{"start":{"line":104,"column":4},"end":{"line":104,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"filtered","start":4075,"end":4083,"loc":{"start":{"line":104,"column":10},"end":{"line":104,"column":18}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":4084,"end":4085,"loc":{"start":{"line":104,"column":19},"end":{"line":104,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"array","start":4086,"end":4091,"loc":{"start":{"line":104,"column":21},"end":{"line":104,"column":26}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4091,"end":4092,"loc":{"start":{"line":104,"column":26},"end":{"line":104,"column":27}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"filter","start":4092,"end":4098,"loc":{"start":{"line":104,"column":27},"end":{"line":104,"column":33}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4098,"end":4099,"loc":{"start":{"line":104,"column":33},"end":{"line":104,"column":34}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"item","start":4099,"end":4103,"loc":{"start":{"line":104,"column":34},"end":{"line":104,"column":38}}},{"type":{"label":"=>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4104,"end":4106,"loc":{"start":{"line":104,"column":39},"end":{"line":104,"column":41}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"item","start":4107,"end":4111,"loc":{"start":{"line":104,"column":42},"end":{"line":104,"column":46}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4111,"end":4112,"loc":{"start":{"line":104,"column":46},"end":{"line":104,"column":47}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"attr","start":4112,"end":4116,"loc":{"start":{"line":104,"column":47},"end":{"line":104,"column":51}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4116,"end":4117,"loc":{"start":{"line":104,"column":51},"end":{"line":104,"column":52}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"===","start":4118,"end":4121,"loc":{"start":{"line":104,"column":53},"end":{"line":104,"column":56}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":4122,"end":4126,"loc":{"start":{"line":104,"column":57},"end":{"line":104,"column":61}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4126,"end":4127,"loc":{"start":{"line":104,"column":61},"end":{"line":104,"column":62}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":4127,"end":4131,"loc":{"start":{"line":104,"column":62},"end":{"line":104,"column":66}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4131,"end":4132,"loc":{"start":{"line":104,"column":66},"end":{"line":104,"column":67}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"src","start":4132,"end":4135,"loc":{"start":{"line":104,"column":67},"end":{"line":104,"column":70}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4135,"end":4136,"loc":{"start":{"line":104,"column":70},"end":{"line":104,"column":71}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4136,"end":4137,"loc":{"start":{"line":104,"column":71},"end":{"line":104,"column":72}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4137,"end":4138,"loc":{"start":{"line":104,"column":72},"end":{"line":104,"column":73}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":4143,"end":4145,"loc":{"start":{"line":105,"column":4},"end":{"line":105,"column":6}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4145,"end":4146,"loc":{"start":{"line":105,"column":6},"end":{"line":105,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"filtered","start":4146,"end":4154,"loc":{"start":{"line":105,"column":7},"end":{"line":105,"column":15}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4154,"end":4155,"loc":{"start":{"line":105,"column":15},"end":{"line":105,"column":16}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":4155,"end":4161,"loc":{"start":{"line":105,"column":16},"end":{"line":105,"column":22}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"===","start":4162,"end":4165,"loc":{"start":{"line":105,"column":23},"end":{"line":105,"column":26}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0,"start":4166,"end":4167,"loc":{"start":{"line":105,"column":27},"end":{"line":105,"column":28}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4167,"end":4168,"loc":{"start":{"line":105,"column":28},"end":{"line":105,"column":29}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4168,"end":4169,"loc":{"start":{"line":105,"column":29},"end":{"line":105,"column":30}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":4178,"end":4183,"loc":{"start":{"line":106,"column":8},"end":{"line":106,"column":13}}},{"type":{"label":"new","keyword":"new","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"new","start":4184,"end":4187,"loc":{"start":{"line":106,"column":14},"end":{"line":106,"column":17}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Error","start":4188,"end":4193,"loc":{"start":{"line":106,"column":18},"end":{"line":106,"column":23}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4193,"end":4194,"loc":{"start":{"line":106,"column":23},"end":{"line":106,"column":24}}},{"type":{"label":"`","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4194,"end":4195,"loc":{"start":{"line":106,"column":24},"end":{"line":106,"column":25}}},{"type":{"label":"template","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"cannot find object in array with ","start":4195,"end":4228,"loc":{"start":{"line":106,"column":25},"end":{"line":106,"column":58}}},{"type":{"label":"${","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4228,"end":4230,"loc":{"start":{"line":106,"column":58},"end":{"line":106,"column":60}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"attr","start":4230,"end":4234,"loc":{"start":{"line":106,"column":60},"end":{"line":106,"column":64}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4234,"end":4235,"loc":{"start":{"line":106,"column":64},"end":{"line":106,"column":65}}},{"type":{"label":"template","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":" === ","start":4235,"end":4240,"loc":{"start":{"line":106,"column":65},"end":{"line":106,"column":70}}},{"type":{"label":"${","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4240,"end":4242,"loc":{"start":{"line":106,"column":70},"end":{"line":106,"column":72}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"src","start":4242,"end":4245,"loc":{"start":{"line":106,"column":72},"end":{"line":106,"column":75}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4245,"end":4246,"loc":{"start":{"line":106,"column":75},"end":{"line":106,"column":76}}},{"type":{"label":"template","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"(","start":4246,"end":4247,"loc":{"start":{"line":106,"column":76},"end":{"line":106,"column":77}}},{"type":{"label":"${","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4247,"end":4249,"loc":{"start":{"line":106,"column":77},"end":{"line":106,"column":79}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":4249,"end":4253,"loc":{"start":{"line":106,"column":79},"end":{"line":106,"column":83}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4253,"end":4254,"loc":{"start":{"line":106,"column":83},"end":{"line":106,"column":84}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":4254,"end":4258,"loc":{"start":{"line":106,"column":84},"end":{"line":106,"column":88}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4258,"end":4259,"loc":{"start":{"line":106,"column":88},"end":{"line":106,"column":89}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"src","start":4259,"end":4262,"loc":{"start":{"line":106,"column":89},"end":{"line":106,"column":92}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4262,"end":4263,"loc":{"start":{"line":106,"column":92},"end":{"line":106,"column":93}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4263,"end":4264,"loc":{"start":{"line":106,"column":93},"end":{"line":106,"column":94}}},{"type":{"label":"template","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":")","start":4264,"end":4265,"loc":{"start":{"line":106,"column":94},"end":{"line":106,"column":95}}},{"type":{"label":"`","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4265,"end":4266,"loc":{"start":{"line":106,"column":95},"end":{"line":106,"column":96}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4266,"end":4267,"loc":{"start":{"line":106,"column":96},"end":{"line":106,"column":97}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4267,"end":4268,"loc":{"start":{"line":106,"column":97},"end":{"line":106,"column":98}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4273,"end":4274,"loc":{"start":{"line":107,"column":4},"end":{"line":107,"column":5}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":4279,"end":4283,"loc":{"start":{"line":108,"column":4},"end":{"line":108,"column":8}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4283,"end":4284,"loc":{"start":{"line":108,"column":8},"end":{"line":108,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":4284,"end":4288,"loc":{"start":{"line":108,"column":9},"end":{"line":108,"column":13}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4288,"end":4289,"loc":{"start":{"line":108,"column":13},"end":{"line":108,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":4289,"end":4293,"loc":{"start":{"line":108,"column":14},"end":{"line":108,"column":18}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4293,"end":4294,"loc":{"start":{"line":108,"column":18},"end":{"line":108,"column":19}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":4295,"end":4296,"loc":{"start":{"line":108,"column":20},"end":{"line":108,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"filtered","start":4297,"end":4305,"loc":{"start":{"line":108,"column":22},"end":{"line":108,"column":30}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4305,"end":4306,"loc":{"start":{"line":108,"column":30},"end":{"line":108,"column":31}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4307,"end":4308,"loc":{"start":{"line":109,"column":0},"end":{"line":109,"column":1}}},{"type":"CommentBlock","value":"*\n * retrieve the first object from an array of objects, matching a specified attribute against a specified value\n * like {@link findAll}, but returning only the first element\n * @param {string} name         identifier of the variable, to write to {@link Corrode#vars}\n * @param {Array<Object>} array array, containing the objects to filter\n * @param {string} attr         identifier of the attribute from an object of `array` to compare against\n * @param {string} [src=name]   {@link Corrode#vars}-identifier to read from\n * @throws {Error} when no object can be found\n * @example\n * parser.uint8('matchAgainst').map.find('matchAgainst', [\n *   { id: 1, name: 'foo' },\n *   { id: 7, name: 'bar' },\n *   { id: 4, name: 'qux' }\n * ], 'id')\n *\n * // [4] => { matchAgainst: { id: 4, name: 'qux' } }\n *\n * // [2] => Error cannot find object!\n ","start":4310,"end":5153,"loc":{"start":{"line":111,"column":0},"end":{"line":129,"column":3}}},{"type":{"label":"export","keyword":"export","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"export","start":5154,"end":5160,"loc":{"start":{"line":130,"column":0},"end":{"line":130,"column":6}}},{"type":{"label":"function","keyword":"function","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"function","start":5161,"end":5169,"loc":{"start":{"line":130,"column":7},"end":{"line":130,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"find","start":5170,"end":5174,"loc":{"start":{"line":130,"column":16},"end":{"line":130,"column":20}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5174,"end":5175,"loc":{"start":{"line":130,"column":20},"end":{"line":130,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":5175,"end":5179,"loc":{"start":{"line":130,"column":21},"end":{"line":130,"column":25}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5179,"end":5180,"loc":{"start":{"line":130,"column":25},"end":{"line":130,"column":26}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"array","start":5181,"end":5186,"loc":{"start":{"line":130,"column":27},"end":{"line":130,"column":32}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5186,"end":5187,"loc":{"start":{"line":130,"column":32},"end":{"line":130,"column":33}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"attr","start":5188,"end":5192,"loc":{"start":{"line":130,"column":34},"end":{"line":130,"column":38}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5192,"end":5193,"loc":{"start":{"line":130,"column":38},"end":{"line":130,"column":39}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"src","start":5194,"end":5197,"loc":{"start":{"line":130,"column":40},"end":{"line":130,"column":43}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":5198,"end":5199,"loc":{"start":{"line":130,"column":44},"end":{"line":130,"column":45}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":5200,"end":5204,"loc":{"start":{"line":130,"column":46},"end":{"line":130,"column":50}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5204,"end":5205,"loc":{"start":{"line":130,"column":50},"end":{"line":130,"column":51}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5205,"end":5206,"loc":{"start":{"line":130,"column":51},"end":{"line":130,"column":52}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"findAll","start":5211,"end":5218,"loc":{"start":{"line":131,"column":4},"end":{"line":131,"column":11}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5218,"end":5219,"loc":{"start":{"line":131,"column":11},"end":{"line":131,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"call","start":5219,"end":5223,"loc":{"start":{"line":131,"column":12},"end":{"line":131,"column":16}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5223,"end":5224,"loc":{"start":{"line":131,"column":16},"end":{"line":131,"column":17}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":5224,"end":5228,"loc":{"start":{"line":131,"column":17},"end":{"line":131,"column":21}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5228,"end":5229,"loc":{"start":{"line":131,"column":21},"end":{"line":131,"column":22}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":5230,"end":5234,"loc":{"start":{"line":131,"column":23},"end":{"line":131,"column":27}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5234,"end":5235,"loc":{"start":{"line":131,"column":27},"end":{"line":131,"column":28}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"array","start":5236,"end":5241,"loc":{"start":{"line":131,"column":29},"end":{"line":131,"column":34}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5241,"end":5242,"loc":{"start":{"line":131,"column":34},"end":{"line":131,"column":35}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"attr","start":5243,"end":5247,"loc":{"start":{"line":131,"column":36},"end":{"line":131,"column":40}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5247,"end":5248,"loc":{"start":{"line":131,"column":40},"end":{"line":131,"column":41}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"src","start":5249,"end":5252,"loc":{"start":{"line":131,"column":42},"end":{"line":131,"column":45}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5252,"end":5253,"loc":{"start":{"line":131,"column":45},"end":{"line":131,"column":46}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5253,"end":5254,"loc":{"start":{"line":131,"column":46},"end":{"line":131,"column":47}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":5259,"end":5263,"loc":{"start":{"line":132,"column":4},"end":{"line":132,"column":8}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5263,"end":5264,"loc":{"start":{"line":132,"column":8},"end":{"line":132,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":5264,"end":5268,"loc":{"start":{"line":132,"column":9},"end":{"line":132,"column":13}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5268,"end":5269,"loc":{"start":{"line":132,"column":13},"end":{"line":132,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":5269,"end":5273,"loc":{"start":{"line":132,"column":14},"end":{"line":132,"column":18}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5273,"end":5274,"loc":{"start":{"line":132,"column":18},"end":{"line":132,"column":19}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":5275,"end":5276,"loc":{"start":{"line":132,"column":20},"end":{"line":132,"column":21}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":5277,"end":5281,"loc":{"start":{"line":132,"column":22},"end":{"line":132,"column":26}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5281,"end":5282,"loc":{"start":{"line":132,"column":26},"end":{"line":132,"column":27}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":5282,"end":5286,"loc":{"start":{"line":132,"column":27},"end":{"line":132,"column":31}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5286,"end":5287,"loc":{"start":{"line":132,"column":31},"end":{"line":132,"column":32}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":5287,"end":5291,"loc":{"start":{"line":132,"column":32},"end":{"line":132,"column":36}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5291,"end":5292,"loc":{"start":{"line":132,"column":36},"end":{"line":132,"column":37}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5292,"end":5293,"loc":{"start":{"line":132,"column":37},"end":{"line":132,"column":38}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0,"start":5293,"end":5294,"loc":{"start":{"line":132,"column":38},"end":{"line":132,"column":39}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5294,"end":5295,"loc":{"start":{"line":132,"column":39},"end":{"line":132,"column":40}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5295,"end":5296,"loc":{"start":{"line":132,"column":40},"end":{"line":132,"column":41}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5297,"end":5298,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":1}}},{"type":"CommentBlock","value":"*\n * replace {@link Corrode#vars} completely with a value from {@link Corrode#vars}\n * especially useful when pushing a variable further up in the stack\n *\n * @example <caption>push loop-variables up</caption>\n * parser.loop('array', function(){\n *     this\n *         .uint8('value')\n *         .map.double()\n *         .map.push('value');\n * });\n *\n * // [1, 2, 3, 4] => { array: [2, 4, 6, 8] }\n *\n * @example <caption>push values in an extension</caption>\n * Corrode.addExtension('doStuff', function(){\n *     this\n *         .uint32('address')\n *         .tap(function(){\n *             this.vars.address = `0x${this.vars.address.toString(16)}`;\n *         })\n *         .map.push('address');\n * });\n *\n * parser.ext.doStuff('hexAddress');\n *\n * // [245] => { hexAddress: '0xf5' }\n *\n * @param {string} [name='values'] identifier of the variable being used as replacement\n ","start":5300,"end":6181,"loc":{"start":{"line":135,"column":0},"end":{"line":164,"column":3}}},{"type":{"label":"export","keyword":"export","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"export","start":6182,"end":6188,"loc":{"start":{"line":165,"column":0},"end":{"line":165,"column":6}}},{"type":{"label":"function","keyword":"function","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"function","start":6189,"end":6197,"loc":{"start":{"line":165,"column":7},"end":{"line":165,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"push","start":6198,"end":6202,"loc":{"start":{"line":165,"column":16},"end":{"line":165,"column":20}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6202,"end":6203,"loc":{"start":{"line":165,"column":20},"end":{"line":165,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":6203,"end":6207,"loc":{"start":{"line":165,"column":21},"end":{"line":165,"column":25}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":6208,"end":6209,"loc":{"start":{"line":165,"column":26},"end":{"line":165,"column":27}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"values","start":6210,"end":6218,"loc":{"start":{"line":165,"column":28},"end":{"line":165,"column":36}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6218,"end":6219,"loc":{"start":{"line":165,"column":36},"end":{"line":165,"column":37}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6219,"end":6220,"loc":{"start":{"line":165,"column":37},"end":{"line":165,"column":38}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":6225,"end":6229,"loc":{"start":{"line":166,"column":4},"end":{"line":166,"column":8}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6229,"end":6230,"loc":{"start":{"line":166,"column":8},"end":{"line":166,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":6230,"end":6234,"loc":{"start":{"line":166,"column":9},"end":{"line":166,"column":13}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":6235,"end":6236,"loc":{"start":{"line":166,"column":14},"end":{"line":166,"column":15}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":6237,"end":6241,"loc":{"start":{"line":166,"column":16},"end":{"line":166,"column":20}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6241,"end":6242,"loc":{"start":{"line":166,"column":20},"end":{"line":166,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":6242,"end":6246,"loc":{"start":{"line":166,"column":21},"end":{"line":166,"column":25}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6246,"end":6247,"loc":{"start":{"line":166,"column":25},"end":{"line":166,"column":26}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":6247,"end":6251,"loc":{"start":{"line":166,"column":26},"end":{"line":166,"column":30}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6251,"end":6252,"loc":{"start":{"line":166,"column":30},"end":{"line":166,"column":31}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6252,"end":6253,"loc":{"start":{"line":166,"column":31},"end":{"line":166,"column":32}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6254,"end":6255,"loc":{"start":{"line":167,"column":0},"end":{"line":167,"column":1}}},{"type":"CommentBlock","value":"*\n * map a value by checking whether it has some bits set\n * @param {string} name    identifier of the variable, to write to {@link Corrode#vars}\n * @param  {Object|number} maskObject Object or number by which to check the bits of the variable to map\n * @example <caption>map via number</caption>\n * parser.uint8('bits').map.bitmask('bits', 0x80)\n *\n * // [0b10111110] => { bits: true }\n *\n * @example <caption>map via object</caption>\n * parser.uint8('bits').map.bitmask('bits', {\n *   isCompressed: 0x80,\n *   isReadOnly: 0x40\n * })\n *\n * // [0b10111110] => { bits: { isCompressed: true, isReadOnly: false } }\n ","start":6257,"end":6874,"loc":{"start":{"line":169,"column":0},"end":{"line":185,"column":3}}},{"type":{"label":"export","keyword":"export","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"export","start":6875,"end":6881,"loc":{"start":{"line":186,"column":0},"end":{"line":186,"column":6}}},{"type":{"label":"function","keyword":"function","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"function","start":6882,"end":6890,"loc":{"start":{"line":186,"column":7},"end":{"line":186,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"bitmask","start":6891,"end":6898,"loc":{"start":{"line":186,"column":16},"end":{"line":186,"column":23}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6898,"end":6899,"loc":{"start":{"line":186,"column":23},"end":{"line":186,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":6899,"end":6903,"loc":{"start":{"line":186,"column":24},"end":{"line":186,"column":28}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6903,"end":6904,"loc":{"start":{"line":186,"column":28},"end":{"line":186,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"maskObject","start":6905,"end":6915,"loc":{"start":{"line":186,"column":30},"end":{"line":186,"column":40}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6915,"end":6916,"loc":{"start":{"line":186,"column":40},"end":{"line":186,"column":41}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6916,"end":6917,"loc":{"start":{"line":186,"column":41},"end":{"line":186,"column":42}}},{"type":{"label":"const","keyword":"const","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"const","start":6922,"end":6927,"loc":{"start":{"line":187,"column":4},"end":{"line":187,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"bits","start":6928,"end":6932,"loc":{"start":{"line":187,"column":10},"end":{"line":187,"column":14}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":6933,"end":6934,"loc":{"start":{"line":187,"column":15},"end":{"line":187,"column":16}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":6935,"end":6939,"loc":{"start":{"line":187,"column":17},"end":{"line":187,"column":21}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6939,"end":6940,"loc":{"start":{"line":187,"column":21},"end":{"line":187,"column":22}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":6940,"end":6944,"loc":{"start":{"line":187,"column":22},"end":{"line":187,"column":26}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6944,"end":6945,"loc":{"start":{"line":187,"column":26},"end":{"line":187,"column":27}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":6945,"end":6949,"loc":{"start":{"line":187,"column":27},"end":{"line":187,"column":31}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6949,"end":6950,"loc":{"start":{"line":187,"column":31},"end":{"line":187,"column":32}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6950,"end":6951,"loc":{"start":{"line":187,"column":32},"end":{"line":187,"column":33}}},{"type":"CommentLine","value":" shortcut for single values","start":6957,"end":6986,"loc":{"start":{"line":189,"column":4},"end":{"line":189,"column":33}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":6991,"end":6993,"loc":{"start":{"line":190,"column":4},"end":{"line":190,"column":6}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6993,"end":6994,"loc":{"start":{"line":190,"column":6},"end":{"line":190,"column":7}}},{"type":{"label":"typeof","keyword":"typeof","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"typeof","start":6994,"end":7000,"loc":{"start":{"line":190,"column":7},"end":{"line":190,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"maskObject","start":7001,"end":7011,"loc":{"start":{"line":190,"column":14},"end":{"line":190,"column":24}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"===","start":7012,"end":7015,"loc":{"start":{"line":190,"column":25},"end":{"line":190,"column":28}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"number","start":7016,"end":7024,"loc":{"start":{"line":190,"column":29},"end":{"line":190,"column":37}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7024,"end":7025,"loc":{"start":{"line":190,"column":37},"end":{"line":190,"column":38}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7025,"end":7026,"loc":{"start":{"line":190,"column":38},"end":{"line":190,"column":39}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":7035,"end":7041,"loc":{"start":{"line":191,"column":8},"end":{"line":191,"column":14}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":7042,"end":7046,"loc":{"start":{"line":191,"column":15},"end":{"line":191,"column":19}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7046,"end":7047,"loc":{"start":{"line":191,"column":19},"end":{"line":191,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":7047,"end":7051,"loc":{"start":{"line":191,"column":20},"end":{"line":191,"column":24}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7051,"end":7052,"loc":{"start":{"line":191,"column":24},"end":{"line":191,"column":25}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":7052,"end":7056,"loc":{"start":{"line":191,"column":25},"end":{"line":191,"column":29}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7056,"end":7057,"loc":{"start":{"line":191,"column":29},"end":{"line":191,"column":30}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":7058,"end":7059,"loc":{"start":{"line":191,"column":31},"end":{"line":191,"column":32}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7060,"end":7061,"loc":{"start":{"line":191,"column":33},"end":{"line":191,"column":34}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"bits","start":7061,"end":7065,"loc":{"start":{"line":191,"column":34},"end":{"line":191,"column":38}}},{"type":{"label":"&","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":5,"updateContext":null},"value":"&","start":7066,"end":7067,"loc":{"start":{"line":191,"column":39},"end":{"line":191,"column":40}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"maskObject","start":7068,"end":7078,"loc":{"start":{"line":191,"column":41},"end":{"line":191,"column":51}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7078,"end":7079,"loc":{"start":{"line":191,"column":51},"end":{"line":191,"column":52}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"===","start":7080,"end":7083,"loc":{"start":{"line":191,"column":53},"end":{"line":191,"column":56}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"maskObject","start":7084,"end":7094,"loc":{"start":{"line":191,"column":57},"end":{"line":191,"column":67}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7094,"end":7095,"loc":{"start":{"line":191,"column":67},"end":{"line":191,"column":68}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7100,"end":7101,"loc":{"start":{"line":192,"column":4},"end":{"line":192,"column":5}}},{"type":{"label":"const","keyword":"const","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"const","start":7107,"end":7112,"loc":{"start":{"line":194,"column":4},"end":{"line":194,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"values","start":7113,"end":7119,"loc":{"start":{"line":194,"column":10},"end":{"line":194,"column":16}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":7120,"end":7121,"loc":{"start":{"line":194,"column":17},"end":{"line":194,"column":18}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7122,"end":7123,"loc":{"start":{"line":194,"column":19},"end":{"line":194,"column":20}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7123,"end":7124,"loc":{"start":{"line":194,"column":20},"end":{"line":194,"column":21}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7124,"end":7125,"loc":{"start":{"line":194,"column":21},"end":{"line":194,"column":22}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Object","start":7130,"end":7136,"loc":{"start":{"line":195,"column":4},"end":{"line":195,"column":10}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7136,"end":7137,"loc":{"start":{"line":195,"column":10},"end":{"line":195,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"keys","start":7137,"end":7141,"loc":{"start":{"line":195,"column":11},"end":{"line":195,"column":15}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7141,"end":7142,"loc":{"start":{"line":195,"column":15},"end":{"line":195,"column":16}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"maskObject","start":7142,"end":7152,"loc":{"start":{"line":195,"column":16},"end":{"line":195,"column":26}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7152,"end":7153,"loc":{"start":{"line":195,"column":26},"end":{"line":195,"column":27}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7153,"end":7154,"loc":{"start":{"line":195,"column":27},"end":{"line":195,"column":28}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"forEach","start":7154,"end":7161,"loc":{"start":{"line":195,"column":28},"end":{"line":195,"column":35}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7161,"end":7162,"loc":{"start":{"line":195,"column":35},"end":{"line":195,"column":36}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"maskName","start":7162,"end":7170,"loc":{"start":{"line":195,"column":36},"end":{"line":195,"column":44}}},{"type":{"label":"=>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7171,"end":7173,"loc":{"start":{"line":195,"column":45},"end":{"line":195,"column":47}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7174,"end":7175,"loc":{"start":{"line":195,"column":48},"end":{"line":195,"column":49}}},{"type":{"label":"const","keyword":"const","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"const","start":7184,"end":7189,"loc":{"start":{"line":196,"column":8},"end":{"line":196,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"mask","start":7190,"end":7194,"loc":{"start":{"line":196,"column":14},"end":{"line":196,"column":18}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":7195,"end":7196,"loc":{"start":{"line":196,"column":19},"end":{"line":196,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"maskObject","start":7197,"end":7207,"loc":{"start":{"line":196,"column":21},"end":{"line":196,"column":31}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7207,"end":7208,"loc":{"start":{"line":196,"column":31},"end":{"line":196,"column":32}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"maskName","start":7208,"end":7216,"loc":{"start":{"line":196,"column":32},"end":{"line":196,"column":40}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7216,"end":7217,"loc":{"start":{"line":196,"column":40},"end":{"line":196,"column":41}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7217,"end":7218,"loc":{"start":{"line":196,"column":41},"end":{"line":196,"column":42}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"values","start":7227,"end":7233,"loc":{"start":{"line":197,"column":8},"end":{"line":197,"column":14}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7233,"end":7234,"loc":{"start":{"line":197,"column":14},"end":{"line":197,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"maskName","start":7234,"end":7242,"loc":{"start":{"line":197,"column":15},"end":{"line":197,"column":23}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7242,"end":7243,"loc":{"start":{"line":197,"column":23},"end":{"line":197,"column":24}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":7244,"end":7245,"loc":{"start":{"line":197,"column":25},"end":{"line":197,"column":26}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7246,"end":7247,"loc":{"start":{"line":197,"column":27},"end":{"line":197,"column":28}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"bits","start":7247,"end":7251,"loc":{"start":{"line":197,"column":28},"end":{"line":197,"column":32}}},{"type":{"label":"&","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":5,"updateContext":null},"value":"&","start":7252,"end":7253,"loc":{"start":{"line":197,"column":33},"end":{"line":197,"column":34}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"mask","start":7254,"end":7258,"loc":{"start":{"line":197,"column":35},"end":{"line":197,"column":39}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7258,"end":7259,"loc":{"start":{"line":197,"column":39},"end":{"line":197,"column":40}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"===","start":7260,"end":7263,"loc":{"start":{"line":197,"column":41},"end":{"line":197,"column":44}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"mask","start":7264,"end":7268,"loc":{"start":{"line":197,"column":45},"end":{"line":197,"column":49}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7268,"end":7269,"loc":{"start":{"line":197,"column":49},"end":{"line":197,"column":50}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7274,"end":7275,"loc":{"start":{"line":198,"column":4},"end":{"line":198,"column":5}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7275,"end":7276,"loc":{"start":{"line":198,"column":5},"end":{"line":198,"column":6}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7276,"end":7277,"loc":{"start":{"line":198,"column":6},"end":{"line":198,"column":7}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":7282,"end":7286,"loc":{"start":{"line":199,"column":4},"end":{"line":199,"column":8}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7286,"end":7287,"loc":{"start":{"line":199,"column":8},"end":{"line":199,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"vars","start":7287,"end":7291,"loc":{"start":{"line":199,"column":9},"end":{"line":199,"column":13}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7291,"end":7292,"loc":{"start":{"line":199,"column":13},"end":{"line":199,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":7292,"end":7296,"loc":{"start":{"line":199,"column":14},"end":{"line":199,"column":18}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7296,"end":7297,"loc":{"start":{"line":199,"column":18},"end":{"line":199,"column":19}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":7298,"end":7299,"loc":{"start":{"line":199,"column":20},"end":{"line":199,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"values","start":7300,"end":7306,"loc":{"start":{"line":199,"column":22},"end":{"line":199,"column":28}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7306,"end":7307,"loc":{"start":{"line":199,"column":28},"end":{"line":199,"column":29}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7308,"end":7309,"loc":{"start":{"line":200,"column":0},"end":{"line":200,"column":1}}},{"type":"CommentBlock","value":"*\n * retrieve absolute value of a number\n * {@link Math.abs}\n * @type {function}\n * @example\n * this.int8('value').map.abs('value')\n *\n * // [-14] => { value: 14 }\n ","start":7311,"end":7480,"loc":{"start":{"line":202,"column":0},"end":{"line":210,"column":3}}},{"type":{"label":"export","keyword":"export","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"export","start":7481,"end":7487,"loc":{"start":{"line":211,"column":0},"end":{"line":211,"column":6}}},{"type":{"label":"const","keyword":"const","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"const","start":7488,"end":7493,"loc":{"start":{"line":211,"column":7},"end":{"line":211,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"abs","start":7494,"end":7497,"loc":{"start":{"line":211,"column":13},"end":{"line":211,"column":16}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":7498,"end":7499,"loc":{"start":{"line":211,"column":17},"end":{"line":211,"column":18}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"bind","start":7500,"end":7504,"loc":{"start":{"line":211,"column":19},"end":{"line":211,"column":23}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7504,"end":7505,"loc":{"start":{"line":211,"column":23},"end":{"line":211,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Math","start":7505,"end":7509,"loc":{"start":{"line":211,"column":24},"end":{"line":211,"column":28}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7509,"end":7510,"loc":{"start":{"line":211,"column":28},"end":{"line":211,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"abs","start":7510,"end":7513,"loc":{"start":{"line":211,"column":29},"end":{"line":211,"column":32}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7513,"end":7514,"loc":{"start":{"line":211,"column":32},"end":{"line":211,"column":33}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7514,"end":7515,"loc":{"start":{"line":211,"column":33},"end":{"line":211,"column":34}}},{"type":"CommentBlock","value":"*\n * retrieve inverted number\n * @type {function}\n * @example\n * this.uint8('value').map.abs('value')\n *\n * // [27] => { value: -27 }\n ","start":7517,"end":7656,"loc":{"start":{"line":213,"column":0},"end":{"line":220,"column":3}}},{"type":{"label":"export","keyword":"export","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"export","start":7657,"end":7663,"loc":{"start":{"line":221,"column":0},"end":{"line":221,"column":6}}},{"type":{"label":"const","keyword":"const","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"const","start":7664,"end":7669,"loc":{"start":{"line":221,"column":7},"end":{"line":221,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"invert","start":7670,"end":7676,"loc":{"start":{"line":221,"column":13},"end":{"line":221,"column":19}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":7677,"end":7678,"loc":{"start":{"line":221,"column":20},"end":{"line":221,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"bind","start":7679,"end":7683,"loc":{"start":{"line":221,"column":22},"end":{"line":221,"column":26}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7683,"end":7684,"loc":{"start":{"line":221,"column":26},"end":{"line":221,"column":27}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"val","start":7684,"end":7687,"loc":{"start":{"line":221,"column":27},"end":{"line":221,"column":30}}},{"type":{"label":"=>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7688,"end":7690,"loc":{"start":{"line":221,"column":31},"end":{"line":221,"column":33}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"val","start":7691,"end":7694,"loc":{"start":{"line":221,"column":34},"end":{"line":221,"column":37}}},{"type":{"label":"*","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":10,"updateContext":null},"value":"*","start":7695,"end":7696,"loc":{"start":{"line":221,"column":38},"end":{"line":221,"column":39}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"-","start":7697,"end":7698,"loc":{"start":{"line":221,"column":40},"end":{"line":221,"column":41}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":1,"start":7698,"end":7699,"loc":{"start":{"line":221,"column":41},"end":{"line":221,"column":42}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7699,"end":7700,"loc":{"start":{"line":221,"column":42},"end":{"line":221,"column":43}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7700,"end":7701,"loc":{"start":{"line":221,"column":43},"end":{"line":221,"column":44}}},{"type":"CommentBlock","value":"*\n * retrieve trimmed string\n * @type {function}\n * @example\n * this.terminatedString('value').map.trim('value')\n *\n * // [' ', '\\t', 'f', 'o', 'b', 'r', '\\n'] => { value: 'fobr' }\n ","start":7703,"end":7889,"loc":{"start":{"line":223,"column":0},"end":{"line":230,"column":3}}},{"type":{"label":"export","keyword":"export","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"export","start":7890,"end":7896,"loc":{"start":{"line":231,"column":0},"end":{"line":231,"column":6}}},{"type":{"label":"const","keyword":"const","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"const","start":7897,"end":7902,"loc":{"start":{"line":231,"column":7},"end":{"line":231,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"trim","start":7903,"end":7907,"loc":{"start":{"line":231,"column":13},"end":{"line":231,"column":17}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":7908,"end":7909,"loc":{"start":{"line":231,"column":18},"end":{"line":231,"column":19}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"bind","start":7910,"end":7914,"loc":{"start":{"line":231,"column":20},"end":{"line":231,"column":24}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7914,"end":7915,"loc":{"start":{"line":231,"column":24},"end":{"line":231,"column":25}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"str","start":7915,"end":7918,"loc":{"start":{"line":231,"column":25},"end":{"line":231,"column":28}}},{"type":{"label":"=>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7919,"end":7921,"loc":{"start":{"line":231,"column":29},"end":{"line":231,"column":31}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"str","start":7922,"end":7925,"loc":{"start":{"line":231,"column":32},"end":{"line":231,"column":35}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7925,"end":7926,"loc":{"start":{"line":231,"column":35},"end":{"line":231,"column":36}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"trim","start":7926,"end":7930,"loc":{"start":{"line":231,"column":36},"end":{"line":231,"column":40}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7930,"end":7931,"loc":{"start":{"line":231,"column":40},"end":{"line":231,"column":41}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7931,"end":7932,"loc":{"start":{"line":231,"column":41},"end":{"line":231,"column":42}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7932,"end":7933,"loc":{"start":{"line":231,"column":42},"end":{"line":231,"column":43}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7933,"end":7934,"loc":{"start":{"line":231,"column":43},"end":{"line":231,"column":44}}},{"type":{"label":"eof","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7935,"end":7935,"loc":{"start":{"line":232,"column":0},"end":{"line":232,"column":0}}}]}